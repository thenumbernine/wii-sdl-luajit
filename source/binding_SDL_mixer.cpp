#if 0
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <malloc.h>
#include <math.h>
#include <gccore.h>
#include <string.h>

#include <SDL/SDL.h>
#include <SDL/SDL_mixer.h>

#include "lua_util.h"

BINDFUNC(int, SDL_GetNumAudioDrivers)
BINDFUNC(const char *, SDL_GetAudioDriver, int )
BINDFUNC(int, SDL_AudioInit, const char *driver_)
BINDFUNC(void, SDL_AudioQuit)
BINDFUNC(const char *, SDL_GetCurrentAudioDriver)
BINDFUNC(int, SDL_OpenAudio, SDL_AudioSpec * , SDL_AudioSpec * )
BINDFUNC(int, SDL_GetNumAudioDevices, int )
BINDFUNC(const char *, SDL_GetAudioDeviceName, int , int )
BINDFUNC(SDL_AudioDeviceID, SDL_OpenAudioDevice, const char *, int , const SDL_AudioSpec * , SDL_AudioSpec * , int allowed_)
BINDFUNC(SDL_AudioStatus, SDL_GetAudioStatus)
BINDFUNC(SDL_AudioStatus, SDL_GetAudioDeviceStatus, SDL_AudioDeviceID )
BINDFUNC(void, SDL_PauseAudio, int pause_)
BINDFUNC(void, SDL_PauseAudioDevice, SDL_AudioDeviceID , int pause_)
BINDFUNC(SDL_AudioSpec *, SDL_LoadWAV_RW, SDL_RWops * , int , SDL_AudioSpec * , Uint8 ** audio_, Uint32 * audio_)
BINDFUNC(void, SDL_FreeWAV, Uint8 * audio_)
BINDFUNC(int, SDL_BuildAudioCVT, SDL_AudioCVT * , SDL_AudioFormat src_, Uint8 src_, int src_, SDL_AudioFormat dst_, Uint8 dst_, int dst_)
BINDFUNC(int, SDL_ConvertAudio, SDL_AudioCVT * )
BINDFUNC(void, SDL_MixAudio, Uint8 * , const Uint8 * , Uint32 , int )
BINDFUNC(void, SDL_MixAudioFormat, Uint8 * , const Uint8 * , SDL_AudioFormat , Uint32 , int )
BINDFUNC(void, SDL_LockAudio)
BINDFUNC(void, SDL_LockAudioDevice, SDL_AudioDeviceID )
BINDFUNC(void, SDL_UnlockAudio)
BINDFUNC(void, SDL_UnlockAudioDevice, SDL_AudioDeviceID )
BINDFUNC(void, SDL_CloseAudio)
BINDFUNC(void, SDL_CloseAudioDevice, SDL_AudioDeviceID )
BINDFUNC(int, SDL_AudioDeviceConnected, SDL_AudioDeviceID )
BINDFUNC(const SDL_version *, Mix_Linked_Version)
BINDFUNC(int, Mix_Init, int )
BINDFUNC(void, Mix_Quit)
BINDFUNC(int, Mix_OpenAudio, int , Uint16 , int , int )
BINDFUNC(int, Mix_AllocateChannels, int )
BINDFUNC(int, Mix_QuerySpec, int *, Uint16 *, int *)
BINDFUNC(Mix_Chunk *, Mix_LoadWAV_RW, SDL_RWops *, int )
BINDFUNC(Mix_Music *, Mix_LoadMUS, const char *)
BINDFUNC(Mix_Music *, Mix_LoadMUS_RW, SDL_RWops *)
BINDFUNC(Mix_Chunk *, Mix_QuickLoad_WAV, Uint8 *)
BINDFUNC(Mix_Chunk *, Mix_QuickLoad_RAW, Uint8 *, Uint32 )
BINDFUNC(void, Mix_FreeChunk, Mix_Chunk *)
BINDFUNC(void, Mix_FreeMusic, Mix_Music *)
BINDFUNC(int, Mix_GetNumChunkDecoders)
BINDFUNC(const char *, Mix_GetChunkDecoder, int )
BINDFUNC(int, Mix_GetNumMusicDecoders)
BINDFUNC(const char *, Mix_GetMusicDecoder, int )
BINDFUNC(Mix_MusicType, Mix_GetMusicType, const Mix_Music *)
BINDFUNC(void Mix_SetPostMix(void, (*mix_func), void *, Uint8 *, void *)
BINDFUNC(void Mix_HookMusic(void, (*mix_func), void *, Uint8 *, void *)
BINDFUNC(void Mix_HookMusicFinished(void, (*music_finished))
BINDFUNC(void *, Mix_GetMusicHookData)
BINDFUNC(void Mix_ChannelFinished(void, (*channel_finished))
BINDFUNC(int, Mix_RegisterEffect, int , Mix_EffectFunc_t , Mix_EffectDone_t , void *)
BINDFUNC(int, Mix_UnregisterEffect, int , Mix_EffectFunc_t )
BINDFUNC(int, Mix_UnregisterAllEffects, int )
BINDFUNC(int, Mix_SetPanning, int , Uint8 , Uint8 )
BINDFUNC(int, Mix_SetPosition, int , Sint16 , Uint8 )
BINDFUNC(int, Mix_SetDistance, int , Uint8 )
BINDFUNC(int, Mix_SetReverseStereo, int , int )
BINDFUNC(int, Mix_ReserveChannels, int )
BINDFUNC(int, Mix_GroupChannel, int , int )
BINDFUNC(int, Mix_GroupChannels, int , int , int )
BINDFUNC(int, Mix_GroupAvailable, int )
BINDFUNC(int, Mix_GroupCount, int )
BINDFUNC(int, Mix_GroupOldest, int )
BINDFUNC(int, Mix_GroupNewer, int )
BINDFUNC(int, Mix_PlayChannelTimed, int , Mix_Chunk *, int , int )
BINDFUNC(int, Mix_PlayMusic, Mix_Music *, int )
BINDFUNC(int, Mix_FadeInMusic, Mix_Music *, int , int )
BINDFUNC(int, Mix_FadeInMusicPos, Mix_Music *, int , int , double )
BINDFUNC(int, Mix_FadeInChannelTimed, int , Mix_Chunk *, int , int , int )
BINDFUNC(int, Mix_Volume, int , int )
BINDFUNC(int, Mix_VolumeChunk, Mix_Chunk *, int )
BINDFUNC(int, Mix_VolumeMusic, int )
BINDFUNC(int, Mix_HaltChannel, int )
BINDFUNC(int, Mix_HaltGroup, int )
BINDFUNC(int, Mix_HaltMusic)
BINDFUNC(int, Mix_ExpireChannel, int , int )
BINDFUNC(int, Mix_FadeOutChannel, int , int )
BINDFUNC(int, Mix_FadeOutGroup, int , int )
BINDFUNC(int, Mix_FadeOutMusic, int )
BINDFUNC(Mix_Fading, Mix_FadingMusic)
BINDFUNC(Mix_Fading, Mix_FadingChannel, int )
BINDFUNC(void, Mix_Pause, int )
BINDFUNC(void, Mix_Resume, int )
BINDFUNC(int, Mix_Paused, int )
BINDFUNC(void, Mix_PauseMusic)
BINDFUNC(void, Mix_ResumeMusic)
BINDFUNC(void, Mix_RewindMusic)
BINDFUNC(int, Mix_PausedMusic)
BINDFUNC(int, Mix_SetMusicPosition, double )
BINDFUNC(int, Mix_Playing, int )
BINDFUNC(int, Mix_PlayingMusic)
BINDFUNC(int, Mix_SetMusicCMD, const char *)
BINDFUNC(int, Mix_SetSynchroValue, int )
BINDFUNC(int, Mix_GetSynchroValue)
BINDFUNC(Mix_Chunk *, Mix_GetChunk, int )
BINDFUNC(void, Mix_CloseAudio)

void init_binding_GL(lua_State *L) {
	int ffi = lua_gettop(L);

	FFI_CDEF_FILE("include/SDL_mixer_types.h");
	BEGIN_PACKAGE(sdl_mixer)

BINDNAME(SDL_GetNumAudioDrivers)
BINDNAME(SDL_GetAudioDriver)
BINDNAME(SDL_AudioInit)
BINDNAME(SDL_AudioQuit)
BINDNAME(SDL_GetCurrentAudioDriver)
BINDNAME(SDL_OpenAudio)
BINDNAME(SDL_GetNumAudioDevices)
BINDNAME(SDL_GetAudioDeviceName)
BINDNAME(SDL_OpenAudioDevice)
BINDNAME(SDL_GetAudioStatus)
BINDNAME(SDL_GetAudioDeviceStatus)
BINDNAME(SDL_PauseAudio)
BINDNAME(SDL_PauseAudioDevice)
BINDNAME(SDL_LoadWAV_RW)
BINDNAME(SDL_FreeWAV)
BINDNAME(SDL_BuildAudioCVT)
BINDNAME(SDL_ConvertAudio)
BINDNAME(SDL_MixAudio)
BINDNAME(SDL_MixAudioFormat)
BINDNAME(SDL_LockAudio)
BINDNAME(SDL_LockAudioDevice)
BINDNAME(SDL_UnlockAudio)
BINDNAME(SDL_UnlockAudioDevice)
BINDNAME(SDL_CloseAudio)
BINDNAME(SDL_CloseAudioDevice)
BINDNAME(SDL_AudioDeviceConnected)
BINDNAME(Mix_Linked_Version)
BINDNAME(Mix_Init)
BINDNAME(Mix_Quit)
BINDNAME(Mix_OpenAudio)
BINDNAME(Mix_AllocateChannels)
BINDNAME(Mix_QuerySpec)
BINDNAME(Mix_LoadWAV_RW)
BINDNAME(Mix_LoadMUS)
BINDNAME(Mix_LoadMUS_RW)
BINDNAME(Mix_QuickLoad_WAV)
BINDNAME(Mix_QuickLoad_RAW)
BINDNAME(Mix_FreeChunk)
BINDNAME(Mix_FreeMusic)
BINDNAME(Mix_GetNumChunkDecoders)
BINDNAME(Mix_GetChunkDecoder)
BINDNAME(Mix_GetNumMusicDecoders)
BINDNAME(Mix_GetMusicDecoder)
BINDNAME(Mix_GetMusicType)
BINDNAME((*mix_func))
BINDNAME((*mix_func))
BINDNAME((*music_finished))
BINDNAME(Mix_GetMusicHookData)
BINDNAME((*channel_finished))
BINDNAME(Mix_RegisterEffect)
BINDNAME(Mix_UnregisterEffect)
BINDNAME(Mix_UnregisterAllEffects)
BINDNAME(Mix_SetPanning)
BINDNAME(Mix_SetPosition)
BINDNAME(Mix_SetDistance)
BINDNAME(Mix_SetReverseStereo)
BINDNAME(Mix_ReserveChannels)
BINDNAME(Mix_GroupChannel)
BINDNAME(Mix_GroupChannels)
BINDNAME(Mix_GroupAvailable)
BINDNAME(Mix_GroupCount)
BINDNAME(Mix_GroupOldest)
BINDNAME(Mix_GroupNewer)
BINDNAME(Mix_PlayChannelTimed)
BINDNAME(Mix_PlayMusic)
BINDNAME(Mix_FadeInMusic)
BINDNAME(Mix_FadeInMusicPos)
BINDNAME(Mix_FadeInChannelTimed)
BINDNAME(Mix_Volume)
BINDNAME(Mix_VolumeChunk)
BINDNAME(Mix_VolumeMusic)
BINDNAME(Mix_HaltChannel)
BINDNAME(Mix_HaltGroup)
BINDNAME(Mix_HaltMusic)
BINDNAME(Mix_ExpireChannel)
BINDNAME(Mix_FadeOutChannel)
BINDNAME(Mix_FadeOutGroup)
BINDNAME(Mix_FadeOutMusic)
BINDNAME(Mix_FadingMusic)
BINDNAME(Mix_FadingChannel)
BINDNAME(Mix_Pause)
BINDNAME(Mix_Resume)
BINDNAME(Mix_Paused)
BINDNAME(Mix_PauseMusic)
BINDNAME(Mix_ResumeMusic)
BINDNAME(Mix_RewindMusic)
BINDNAME(Mix_PausedMusic)
BINDNAME(Mix_SetMusicPosition)
BINDNAME(Mix_Playing)
BINDNAME(Mix_PlayingMusic)
BINDNAME(Mix_SetMusicCMD)
BINDNAME(Mix_SetSynchroValue)
BINDNAME(Mix_GetSynchroValue)
BINDNAME(Mix_GetChunk)
BINDNAME(Mix_CloseAudio)

	END_PACKAGE()
}
#endif

