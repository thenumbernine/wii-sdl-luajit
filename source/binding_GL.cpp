#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <malloc.h>
#include <math.h>
#include <gccore.h>
#include <string.h>

#include <GL/gl.h>

#include "lua_util.h"

//luaPushValue
//luaGetValue
// gl2gx ... doesn't have much

BINDFUNC(void , glActiveTextureARB ,GLenum);
BINDFUNC(void , glClientActiveTextureARB ,GLenum);
//BINDFUNC(void , glMultiTexCoord1dARB ,GLenum, GLdouble);
//BINDFUNC(void , glMultiTexCoord1dvARB ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord1fARB ,GLenum, GLfloat);
//BINDFUNC(void , glMultiTexCoord1fvARB ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord1iARB ,GLenum, GLint);
//BINDFUNC(void , glMultiTexCoord1ivARB ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord1sARB ,GLenum, GLshort);
//BINDFUNC(void , glMultiTexCoord1svARB ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord2dARB ,GLenum, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord2dvARB ,GLenum, const GLdouble *);
BINDFUNC(void , glMultiTexCoord2fARB ,GLenum, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord2fvARB ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord2iARB ,GLenum, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord2ivARB ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord2sARB ,GLenum, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord2svARB ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord3dARB ,GLenum, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord3dvARB ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord3fARB ,GLenum, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord3fvARB ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord3iARB ,GLenum, GLint, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord3ivARB ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord3sARB ,GLenum, GLshort, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord3svARB ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord4dARB ,GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord4dvARB ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord4fARB ,GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord4fvARB ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord4iARB ,GLenum, GLint, GLint, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord4ivARB ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord4sARB ,GLenum, GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord4svARB ,GLenum, const GLshort *);
//BINDFUNC(void , glLoadTransposeMatrixfARB ,const GLfloat *);
//BINDFUNC(void , glLoadTransposeMatrixdARB ,const GLdouble *);
//BINDFUNC(void , glMultTransposeMatrixfARB ,const GLfloat *);
//BINDFUNC(void , glMultTransposeMatrixdARB ,const GLdouble *);
//BINDFUNC(void , glSampleCoverageARB ,GLclampf, GLboolean);
//BINDFUNC(void , glSamplePassARB ,GLenum);
//BINDFUNC(void , glCompressedTexImage3DARB ,GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexImage2DARB ,GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexImage1DARB ,GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage3DARB ,GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage2DARB ,GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage1DARB ,GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glGetCompressedTexImageARB ,GLenum, GLint, GLvoid *);
//BINDFUNC(void , glWeightbvARB,GLint, const GLbyte *);
//BINDFUNC(void , glWeightsvARB,GLint, const GLshort *);
//BINDFUNC(void , glWeightivARB,GLint, const GLint *);
//BINDFUNC(void , glWeightfvARB,GLint, const GLfloat *);
//BINDFUNC(void , glWeightdvARB,GLint, const GLdouble *);
//BINDFUNC(void , glWeightubvARB,GLint, const GLubyte *);
//BINDFUNC(void , glWeightusvARB,GLint, const GLushort *);
//BINDFUNC(void , glWeightuivARB,GLint, const GLuint *);
//BINDFUNC(void , glWeightPointerARB,GLint, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glVertexBlendARB,GLint);
//BINDFUNC(void , glWindowPos2dARB ,GLdouble, GLdouble);
//BINDFUNC(void , glWindowPos2dvARB ,const GLdouble *);
//BINDFUNC(void , glWindowPos2fARB ,GLfloat, GLfloat);
//BINDFUNC(void , glWindowPos2fvARB ,const GLfloat *);
//BINDFUNC(void , glWindowPos2iARB ,GLint, GLint);
//BINDFUNC(void , glWindowPos2ivARB ,const GLint *);
//BINDFUNC(void , glWindowPos2sARB ,GLshort, GLshort);
//BINDFUNC(void , glWindowPos2svARB ,const GLshort *);
//BINDFUNC(void , glWindowPos3dARB ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glWindowPos3dvARB ,const GLdouble *);
//BINDFUNC(void , glWindowPos3fARB ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glWindowPos3fvARB ,const GLfloat *);
//BINDFUNC(void , glWindowPos3iARB ,GLint, GLint, GLint);
//BINDFUNC(void , glWindowPos3ivARB ,const GLint *);
//BINDFUNC(void , glWindowPos3sARB ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glWindowPos3svARB ,const GLshort *);
//BINDFUNC(void , glGenQueriesARB,GLsizei, GLuint *);
//BINDFUNC(void , glDeleteQueriesARB,GLsizei, const GLuint *);
//BINDFUNC(GLboolean , glIsQueryARB,GLuint);
//BINDFUNC(void , glBeginQueryARB,GLenum, GLuint);
//BINDFUNC(void , glEndQueryARB,GLenum);
//BINDFUNC(void , glGetQueryivARB,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetQueryObjectivARB,GLuint, GLenum, GLint *);
//BINDFUNC(void , glGetQueryObjectuivARB,GLuint, GLenum, GLuint *);
//BINDFUNC(void , glPointParameterfARB,GLenum, GLfloat);
//BINDFUNC(void , glPointParameterfvARB,GLenum, const GLfloat *);
//BINDFUNC(void , glBindProgramARB,GLenum, GLuint);
//BINDFUNC(void , glDeleteProgramsARB,GLsizei, const GLuint *);
//BINDFUNC(void , glGenProgramsARB,GLsizei, GLuint *);
//BINDFUNC(GLboolean , glIsProgramARB,GLuint);
//BINDFUNC(void , glProgramEnvParameter4dARB,GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glProgramEnvParameter4dvARB,GLenum, GLuint, const GLdouble *);
//BINDFUNC(void , glProgramEnvParameter4fARB,GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glProgramEnvParameter4fvARB,GLenum, GLuint, const GLfloat *);
//BINDFUNC(void , glProgramLocalParameter4dARB,GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glProgramLocalParameter4dvARB,GLenum, GLuint, const GLdouble *);
//BINDFUNC(void , glProgramLocalParameter4fARB,GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glProgramLocalParameter4fvARB,GLenum, GLuint, const GLfloat *);
//BINDFUNC(void , glGetProgramEnvParameterdvARB,GLenum, GLuint, GLdouble *);
//BINDFUNC(void , glGetProgramEnvParameterfvARB,GLenum, GLuint, GLfloat *);
//BINDFUNC(void , glProgramEnvParameters4fvEXT,GLenum, GLuint, GLsizei, const GLfloat *);
//BINDFUNC(void , glProgramLocalParameters4fvEXT,GLenum, GLuint, GLsizei, const GLfloat *);
//BINDFUNC(void , glGetProgramLocalParameterdvARB,GLenum, GLuint, GLdouble *);
//BINDFUNC(void , glGetProgramLocalParameterfvARB,GLenum, GLuint, GLfloat *);
//BINDFUNC(void , glProgramStringARB,GLenum, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glGetProgramStringARB,GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetProgramivARB,GLenum, GLenum, GLint *);
//BINDFUNC(void , glVertexAttrib1dARB,GLuint, GLdouble);
//BINDFUNC(void , glVertexAttrib1dvARB,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib1fARB,GLuint, GLfloat);
//BINDFUNC(void , glVertexAttrib1fvARB,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib1sARB,GLuint, GLshort);
//BINDFUNC(void , glVertexAttrib1svARB,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib2dARB,GLuint, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib2dvARB,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib2fARB,GLuint, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib2fvARB,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib2sARB,GLuint, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib2svARB,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib3dARB,GLuint, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib3dvARB,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib3fARB,GLuint, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib3fvARB,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib3sARB,GLuint, GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib3svARB,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4NbvARB,GLuint, const GLbyte *);
//BINDFUNC(void , glVertexAttrib4NivARB,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttrib4NsvARB,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4NubARB,GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glVertexAttrib4NubvARB,GLuint, const GLubyte);
//BINDFUNC(void , glVertexAttrib4NuivARB,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttrib4NusvARB,GLuint, const GLushort *);
//BINDFUNC(void , glVertexAttrib4bvARB,GLuint, const GLbyte *);
//BINDFUNC(void , glVertexAttrib4dARB,GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib4dvARB,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib4fARB,GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib4fvARB,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib4ivARB,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttrib4sARB,GLuint, GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib4svARB,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4ubvARB,GLuint, const GLubyte);
//BINDFUNC(void , glVertexAttrib4uivARB,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttrib4usvARB,GLuint, const GLushort *);
//BINDFUNC(void , glVertexAttribPointerARB,GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid *);
//BINDFUNC(void , glDisableVertexAttribArrayARB,GLuint);
//BINDFUNC(void , glEnableVertexAttribArrayARB,GLuint);
//BINDFUNC(void , glGetVertexAttribPointervARB,GLuint, GLenum, GLvoid **);
//BINDFUNC(void , glGetVertexAttribdvARB,GLuint, GLenum, GLdouble *);
//BINDFUNC(void , glGetVertexAttribfvARB,GLuint, GLenum, GLfloat *);
//BINDFUNC(void , glGetVertexAttribivARB,GLuint, GLenum, GLint *);
//BINDFUNC(void , glDeleteObjectARB,GLhandleARB);
//BINDFUNC(GLhandleARB , glGetHandleARB,GLenum);
//BINDFUNC(void , glDetachObjectARB,GLhandleARB , GLhandleARB );
//BINDFUNC(GLhandleARB , glCreateShaderObjectARB,GLenum );
//BINDFUNC(void , glShaderSourceARB,GLhandleARB , GLsizei, const GLcharARB **, const GLint *);
//BINDFUNC(void , glCompileShaderARB,GLhandleARB );
//BINDFUNC(GLhandleARB , glCreateProgramObjectARB);
//BINDFUNC(void , glAttachObjectARB,GLhandleARB , GLhandleARB);
//BINDFUNC(void , glLinkProgramARB,GLhandleARB );
//BINDFUNC(void , glUseProgramObjectARB,GLhandleARB );
//BINDFUNC(void , glValidateProgramARB,GLhandleARB );
//BINDFUNC(void , glUniform1fARB,GLint, GLfloat );
//BINDFUNC(void , glUniform2fARB,GLint, GLfloat , GLfloat );
//BINDFUNC(void , glUniform3fARB,GLint, GLfloat , GLfloat , GLfloat );
//BINDFUNC(void , glUniform4fARB,GLint, GLfloat , GLfloat , GLfloat , GLfloat );
//BINDFUNC(void , glUniform1iARB,GLint, GLint );
//BINDFUNC(void , glUniform2iARB,GLint, GLint , GLint );
//BINDFUNC(void , glUniform3iARB,GLint, GLint , GLint , GLint );
//BINDFUNC(void , glUniform4iARB,GLint, GLint , GLint , GLint , GLint );
//BINDFUNC(void , glUniform1fvARB,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform2fvARB,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform3fvARB,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform4fvARB,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform1ivARB,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform2ivARB,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform3ivARB,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform4ivARB,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniformMatrix2fvARB,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix3fvARB,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix4fvARB,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glGetObjectParameterfvARB,GLhandleARB, GLenum, GLfloat *);
//BINDFUNC(void , glGetObjectParameterivARB,GLhandleARB, GLenum, GLint *);
//BINDFUNC(void , glGetInfoLogARB,GLhandleARB, GLsizei , GLsizei *, GLcharARB *);
//BINDFUNC(void , glGetAttachedObjectsARB,GLhandleARB , GLsizei , GLsizei *, GLhandleARB *);
//BINDFUNC(GLint , glGetUniformLocationARB,GLhandleARB , const GLcharARB *);
//BINDFUNC(void , glGetActiveUniformARB,GLhandleARB , GLuint, GLsizei , GLsizei *, GLint *, GLenum *, GLcharARB *);
//BINDFUNC(void , glGetUniformfvARB,GLhandleARB , GLint, GLfloat *);
//BINDFUNC(void , glGetUniformivARB,GLhandleARB , GLint, GLint *);
//BINDFUNC(void , glGetShaderSourceARB,GLhandleARB, GLsizei , GLsizei *, GLcharARB *);
//BINDFUNC(void , glBindAttribLocationARB,GLhandleARB , GLuint, const GLcharARB *);
//BINDFUNC(void , glGetActiveAttribARB,GLhandleARB , GLuint, GLsizei , GLsizei *, GLint *, GLenum *, GLcharARB *);
//BINDFUNC(GLint , glGetAttribLocationARB,GLhandleARB , const GLcharARB *);
//BINDFUNC(void , glBindBufferARB,GLenum, GLuint );
//BINDFUNC(void , glDeleteBuffersARB,GLsizei, const GLuint *);
//BINDFUNC(void , glGenBuffersARB,GLsizei, GLuint *);
//BINDFUNC(GLboolean , glIsBufferARB,GLuint );
//BINDFUNC(void , glBufferDataARB,GLenum, GLsizeiptrARB , const GLvoid *, GLenum );
//BINDFUNC(void , glBufferSubDataARB,GLenum, GLintptrARB , GLsizeiptrARB , const GLvoid *);
//BINDFUNC(void , glGetBufferSubDataARB,GLenum, GLintptrARB , GLsizeiptrARB , GLvoid *);
//BINDFUNC(GLvoid *, glMapBufferARB,GLenum, GLenum );
//BINDFUNC(GLboolean , glUnmapBufferARB,GLenum);
//BINDFUNC(void , glGetBufferParameterivARB,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetBufferPointervARB,GLenum, GLenum, GLvoid **);
//BINDFUNC(void , glDrawBuffersARB,GLsizei, const GLenum *);
//BINDFUNC(void , glClampColorARB,GLenum, GLenum );
//BINDFUNC(void , glDrawArraysInstancedARB,GLenum , GLint , GLsizei, GLsizei );
//BINDFUNC(void , glDrawElementsInstancedARB,GLenum , GLsizei, GLenum, const GLvoid *, GLsizei );
//BINDFUNC(void , glVertexAttribDivisorARB,GLuint, GLuint );
//BINDFUNC(void , glGetUniformIndices,GLuint, GLsizei , const GLchar** , GLuint* );
//BINDFUNC(void , glGetActiveUniformsiv,GLuint, GLsizei , const GLuint* , GLenum, GLint* );
//BINDFUNC(void , glGetActiveUniformName,GLuint, GLuint , GLsizei , GLsizei* , GLchar* );
//BINDFUNC(GLuint , glGetUniformBlockIndex,GLuint, const GLchar* );
//BINDFUNC(void , glGetActiveUniformBlockiv,GLuint, GLuint , GLenum, GLint* );
//BINDFUNC(void , glGetActiveUniformBlockName,GLuint, GLuint , GLsizei , GLsizei* , GLchar* );
//BINDFUNC(void , glBindBufferRange,GLenum, GLuint, GLuint , GLintptr , GLsizeiptr );
//BINDFUNC(void , glBindBufferBase,GLenum, GLuint, GLuint );
//BINDFUNC(void , glGetIntegeri_v,GLenum, GLuint, GLint* );
//BINDFUNC(void , glUniformBlockBinding,GLuint, GLuint , GLuint );
//BINDFUNC(void , glBlendColorEXT ,GLclampf, GLclampf, GLclampf, GLclampf);
//BINDFUNC(void , glBlendEquationEXT ,GLenum);
//BINDFUNC(void , glLockArraysEXT ,GLint, GLsizei);
//BINDFUNC(void , glUnlockArraysEXT );
//BINDFUNC(void , glDrawRangeElementsEXT ,GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *);
//BINDFUNC(void , glSecondaryColor3bEXT ,GLbyte, GLbyte, GLbyte);
//BINDFUNC(void , glSecondaryColor3bvEXT ,const GLbyte *);
//BINDFUNC(void , glSecondaryColor3dEXT ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glSecondaryColor3dvEXT ,const GLdouble *);
//BINDFUNC(void , glSecondaryColor3fEXT ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glSecondaryColor3fvEXT ,const GLfloat *);
//BINDFUNC(void , glSecondaryColor3iEXT ,GLint, GLint, GLint);
//BINDFUNC(void , glSecondaryColor3ivEXT ,const GLint *);
//BINDFUNC(void , glSecondaryColor3sEXT ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glSecondaryColor3svEXT ,const GLshort *);
//BINDFUNC(void , glSecondaryColor3ubEXT ,GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glSecondaryColor3ubvEXT ,const GLubyte *);
//BINDFUNC(void , glSecondaryColor3uiEXT ,GLuint, GLuint, GLuint);
//BINDFUNC(void , glSecondaryColor3uivEXT ,const GLuint *);
//BINDFUNC(void , glSecondaryColor3usEXT ,GLushort, GLushort, GLushort);
//BINDFUNC(void , glSecondaryColor3usvEXT ,const GLushort *);
//BINDFUNC(void , glSecondaryColorPointerEXT ,GLint, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glMultiDrawArraysEXT ,GLenum, const GLint *, const GLsizei *, GLsizei);
//BINDFUNC(void , glMultiDrawElementsEXT ,GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);
//BINDFUNC(void , glFogCoordfEXT ,GLfloat);
//BINDFUNC(void , glFogCoordfvEXT ,const GLfloat *);
//BINDFUNC(void , glFogCoorddEXT ,GLdouble);
//BINDFUNC(void , glFogCoorddvEXT ,const GLdouble *);
//BINDFUNC(void , glFogCoordPointerEXT ,GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glBlendFuncSeparateEXT ,GLenum, GLenum, GLenum, GLenum);
//BINDFUNC(void , glActiveStencilFaceEXT,GLenum);
//BINDFUNC(void , glDepthBoundsEXT,GLclampd , GLclampd );
//BINDFUNC(void , glBlendEquationSeparateEXT,GLenum , GLenum );
//BINDFUNC(GLboolean , glIsRenderbufferEXT,GLuint );
//BINDFUNC(void , glBindRenderbufferEXT,GLenum, GLuint );
//BINDFUNC(void , glDeleteRenderbuffersEXT,GLsizei, const GLuint *);
//BINDFUNC(void , glGenRenderbuffersEXT,GLsizei, GLuint *);
//BINDFUNC(void , glRenderbufferStorageEXT,GLenum, GLenum, GLsizei, GLsizei);
//BINDFUNC(void , glGetRenderbufferParameterivEXT,GLenum, GLenum, GLint *);
//BINDFUNC(GLboolean , glIsFramebufferEXT,GLuint );
//BINDFUNC(void , glBindFramebufferEXT,GLenum, GLuint );
//BINDFUNC(void , glDeleteFramebuffersEXT,GLsizei, const GLuint *);
//BINDFUNC(void , glGenFramebuffersEXT,GLsizei, GLuint *);
//BINDFUNC(GLenum , glCheckFramebufferStatusEXT,GLenum);
//BINDFUNC(void , glFramebufferTexture1DEXT,GLenum, GLenum , GLenum , GLuint , GLint);
//BINDFUNC(void , glFramebufferTexture2DEXT,GLenum, GLenum , GLenum , GLuint , GLint);
//BINDFUNC(void , glFramebufferTexture3DEXT,GLenum, GLenum , GLenum , GLuint , GLint, GLint);
//BINDFUNC(void , glFramebufferRenderbufferEXT,GLenum, GLenum , GLenum , GLuint );
//BINDFUNC(void , glGetFramebufferAttachmentParameterivEXT,GLenum, GLenum , GLenum, GLint *);
//BINDFUNC(void , glGenerateMipmapEXT,GLenum);
//BINDFUNC(void , glBlitFramebufferEXT,GLint, GLint, GLint, GLint, GLint , GLint , GLint , GLint , GLbitfield , GLenum );
//BINDFUNC(void , glRenderbufferStorageMultisampleEXT,GLenum, GLsizei , GLenum, GLsizei, GLsizei);
//BINDFUNC(void , glProgramParameteriEXT,GLuint, GLenum, GLint );
//BINDFUNC(void , glFramebufferTextureEXT,GLenum, GLenum , GLuint , GLint);
//BINDFUNC(void , glFramebufferTextureFaceEXT,GLenum, GLenum , GLuint , GLint, GLenum);
//BINDFUNC(void , glFramebufferTextureLayerEXT,GLenum, GLenum , GLuint , GLint, GLint );
//BINDFUNC(GLboolean , glIsRenderbuffer ,GLuint);
//BINDFUNC(void , glBindRenderbuffer ,GLenum, GLuint);
//BINDFUNC(void , glDeleteRenderbuffers ,GLsizei, const GLuint *);
//BINDFUNC(void , glGenRenderbuffers ,GLsizei, GLuint *);
//BINDFUNC(void , glRenderbufferStorage ,GLenum, GLenum, GLsizei, GLsizei);
//BINDFUNC(void , glGetRenderbufferParameteriv ,GLenum, GLenum, GLint *);
//BINDFUNC(GLboolean , glIsFramebuffer ,GLuint);
//BINDFUNC(void , glBindFramebuffer ,GLenum, GLuint);
//BINDFUNC(void , glDeleteFramebuffers ,GLsizei, const GLuint *);
//BINDFUNC(void , glGenFramebuffers ,GLsizei, GLuint *);
//BINDFUNC(GLenum , glCheckFramebufferStatus ,GLenum);
//BINDFUNC(void , glFramebufferTexture1D ,GLenum, GLenum, GLenum, GLuint, GLint);
//BINDFUNC(void , glFramebufferTexture2D ,GLenum, GLenum, GLenum, GLuint, GLint);
//BINDFUNC(void , glFramebufferTexture3D ,GLenum, GLenum, GLenum, GLuint, GLint, GLint);
//BINDFUNC(void , glFramebufferRenderbuffer ,GLenum, GLenum, GLenum, GLuint);
//BINDFUNC(void , glGetFramebufferAttachmentParameteriv ,GLenum, GLenum, GLenum, GLint *);
//BINDFUNC(void , glGenerateMipmap ,GLenum);
//BINDFUNC(void , glBlitFramebuffer ,GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
//BINDFUNC(void , glRenderbufferStorageMultisample ,GLenum, GLsizei, GLenum, GLsizei, GLsizei);
//BINDFUNC(void , glFramebufferTextureLayer ,GLenum, GLenum, GLuint, GLint, GLint);
//BINDFUNC(void , glBindBufferRangeEXT,GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
//BINDFUNC(void , glBindBufferOffsetEXT,GLenum, GLuint, GLuint, GLintptr);
//BINDFUNC(void , glBindBufferBaseEXT,GLenum, GLuint, GLuint);
//BINDFUNC(void , glBeginTransformFeedbackEXT,GLenum );
//BINDFUNC(void , glEndTransformFeedbackEXT);
//BINDFUNC(void , glTransformFeedbackVaryingsEXT,GLuint, GLsizei, const GLchar **, GLenum );
//BINDFUNC(void , glGetTransformFeedbackVaryingEXT,GLuint, GLuint, GLsizei , GLsizei *, GLsizei *, GLenum *, GLchar *);
//BINDFUNC(void , glGetIntegerIndexedvEXT,GLenum, GLuint, GLint *);
//BINDFUNC(void , glGetBooleanIndexedvEXT,GLenum, GLuint, GLboolean *);
//BINDFUNC(void , glUniformBufferEXT,GLuint, GLint, GLuint);
//BINDFUNC(GLint , glGetUniformBufferSizeEXT,GLuint, GLint);
//BINDFUNC(GLintptr , glGetUniformOffsetEXT,GLuint, GLint);
//BINDFUNC(void , glClearColorIiEXT, GLint, GLint , GLint , GLint  );
//BINDFUNC(void , glClearColorIuiEXT, GLuint , GLuint , GLuint , GLuint );
//BINDFUNC(void , glTexParameterIivEXT, GLenum, GLenum, GLint * );
//BINDFUNC(void , glTexParameterIuivEXT, GLenum, GLenum, GLuint * );
//BINDFUNC(void , glGetTexParameterIivEXT, GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetTexParameterIuivEXT, GLenum, GLenum, GLuint *);
//BINDFUNC(void , glVertexAttribI1iEXT,GLuint, GLint);
//BINDFUNC(void , glVertexAttribI2iEXT,GLuint, GLint, GLint);
//BINDFUNC(void , glVertexAttribI3iEXT,GLuint, GLint, GLint, GLint);
//BINDFUNC(void , glVertexAttribI4iEXT,GLuint, GLint, GLint, GLint, GLint);
//BINDFUNC(void , glVertexAttribI1uiEXT,GLuint, GLuint );
//BINDFUNC(void , glVertexAttribI2uiEXT,GLuint, GLuint , GLuint );
//BINDFUNC(void , glVertexAttribI3uiEXT,GLuint, GLuint , GLuint , GLuint );
//BINDFUNC(void , glVertexAttribI4uiEXT,GLuint, GLuint , GLuint , GLuint , GLuint );
//BINDFUNC(void , glVertexAttribI1ivEXT,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttribI2ivEXT,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttribI3ivEXT,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttribI4ivEXT,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttribI1uivEXT,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttribI2uivEXT,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttribI3uivEXT,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttribI4uivEXT,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttribI4bvEXT,GLuint, const GLbyte *);
//BINDFUNC(void , glVertexAttribI4svEXT,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttribI4ubvEXT,GLuint, const GLubyte);
//BINDFUNC(void , glVertexAttribI4usvEXT,GLuint, const GLushort *);
//BINDFUNC(void , glVertexAttribIPointerEXT,GLuint, GLint, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glGetVertexAttribIivEXT,GLuint, GLenum, GLint *);
//BINDFUNC(void , glGetVertexAttribIuivEXT,GLuint, GLenum, GLuint *);
//BINDFUNC(void , glUniform1uiEXT,GLint, GLuint );
//BINDFUNC(void , glUniform2uiEXT,GLint, GLuint , GLuint );
//BINDFUNC(void , glUniform3uiEXT,GLint, GLuint , GLuint , GLuint );
//BINDFUNC(void , glUniform4uiEXT,GLint, GLuint , GLuint , GLuint , GLuint );
//BINDFUNC(void , glUniform1uivEXT,GLint, GLsizei, const GLuint *);
//BINDFUNC(void , glUniform2uivEXT,GLint, GLsizei, const GLuint *);
//BINDFUNC(void , glUniform3uivEXT,GLint, GLsizei, const GLuint *);
//BINDFUNC(void , glUniform4uivEXT,GLint, GLsizei, const GLuint *);
//BINDFUNC(void , glGetUniformuivEXT,GLuint, GLint, GLuint *);
//BINDFUNC(void , glBindFragDataLocationEXT,GLuint, GLuint , const GLchar *);
//BINDFUNC(GLint , glGetFragDataLocationEXT,GLuint, const GLchar *);
//BINDFUNC(void , glColorMaskIndexedEXT,GLuint, GLboolean , GLboolean , GLboolean , GLboolean );
//BINDFUNC(void , glEnableIndexedEXT,GLenum, GLuint);
//BINDFUNC(void , glDisableIndexedEXT,GLenum, GLuint);
//BINDFUNC(GLboolean , glIsEnabledIndexedEXT,GLenum, GLuint);
//BINDFUNC(void , glProvokingVertexEXT,GLenum);
//BINDFUNC(void , glTextureRangeAPPLE,GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glGetTexParameterPointervAPPLE,GLenum, GLenum, GLvoid **);
//BINDFUNC(void , glVertexArrayRangeAPPLE,GLsizei, const GLvoid *);
//BINDFUNC(void , glFlushVertexArrayRangeAPPLE,GLsizei, const GLvoid *);
//BINDFUNC(void , glVertexArrayParameteriAPPLE,GLenum, GLint);
//BINDFUNC(void , glBindVertexArrayAPPLE,GLuint);
//BINDFUNC(void , glDeleteVertexArraysAPPLE,GLsizei, const GLuint *);
//BINDFUNC(void , glGenVertexArraysAPPLE,GLsizei, GLuint *);
//BINDFUNC(GLboolean , glIsVertexArrayAPPLE,GLuint);
//BINDFUNC(void , glGenFencesAPPLE,GLsizei, GLuint *);
//BINDFUNC(void , glDeleteFencesAPPLE,GLsizei, const GLuint *);
//BINDFUNC(void , glSetFenceAPPLE,GLuint);
//BINDFUNC(GLboolean , glIsFenceAPPLE,GLuint);
//BINDFUNC(GLboolean , glTestFenceAPPLE,GLuint);
//BINDFUNC(void , glFinishFenceAPPLE,GLuint);
//BINDFUNC(GLboolean , glTestObjectAPPLE,GLenum, GLuint);
//BINDFUNC(void , glFinishObjectAPPLE,GLenum, GLuint);
//BINDFUNC(void , glElementPointerAPPLE,GLenum, const GLvoid *);
//BINDFUNC(void , glDrawElementArrayAPPLE,GLenum, GLint, GLsizei);
//BINDFUNC(void , glDrawRangeElementArrayAPPLE,GLenum, GLuint , GLuint , GLint, GLsizei);
//BINDFUNC(void , glMultiDrawElementArrayAPPLE,GLenum, const GLint *, const GLsizei *, GLsizei );
//BINDFUNC(void , glMultiDrawRangeElementArrayAPPLE,GLenum, GLuint , GLuint , const GLint *, const GLsizei *, GLsizei );
//BINDFUNC(void , glFlushRenderAPPLE);
//BINDFUNC(void , glFinishRenderAPPLE);
//BINDFUNC(void , glSwapAPPLE);
//BINDFUNC(void , glEnableVertexAttribAPPLE,GLuint, GLenum);
//BINDFUNC(void , glDisableVertexAttribAPPLE,GLuint, GLenum);
//BINDFUNC(GLboolean , glIsVertexAttribEnabledAPPLE,GLuint, GLenum);
//BINDFUNC(void , glMapVertexAttrib1dAPPLE,GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);
//BINDFUNC(void , glMapVertexAttrib1fAPPLE,GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);
//BINDFUNC(void , glMapVertexAttrib2dAPPLE,GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint , GLint , const GLdouble *);
//BINDFUNC(void , glMapVertexAttrib2fAPPLE,GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint , GLint , const GLfloat *);
//BINDFUNC(void , glBufferParameteriAPPLE,GLenum, GLenum, GLint);
//BINDFUNC(void , glFlushMappedBufferRangeAPPLE,GLenum, GLintptr, GLsizeiptr);
//BINDFUNC(GLenum , glObjectPurgeableAPPLE,GLenum, GLuint, GLenum);
//BINDFUNC(GLenum , glObjectUnpurgeableAPPLE,GLenum, GLuint, GLenum);
//BINDFUNC(void , glGetObjectParameterivAPPLE,GLenum, GLuint, GLenum, GLint *);
//BINDFUNC(void , glPNTrianglesiATI,GLenum, GLint);
//BINDFUNC(void , glPNTrianglesfATI,GLenum, GLfloat);
//BINDFUNC(void , glBlendEquationSeparateATI,GLenum , GLenum );
//BINDFUNC(void , glStencilOpSeparateATI,GLenum, GLenum , GLenum , GLenum );
//BINDFUNC(void , glStencilFuncSeparateATI,GLenum , GLenum , GLint, GLuint);
//BINDFUNC(void , glPNTrianglesiATIX,GLenum, GLint);
//BINDFUNC(void , glPNTrianglesfATIX,GLenum, GLfloat);
//BINDFUNC(void , glPointParameteriNV,GLenum, GLint);
//BINDFUNC(void , glPointParameterivNV,GLenum, const GLint *);
//BINDFUNC(void , glBeginConditionalRenderNV ,GLuint, GLenum);
//BINDFUNC(void , glEndConditionalRenderNV );
//BINDFUNC(void , glAccum ,GLenum , GLfloat );
//BINDFUNC(void , glAlphaFunc ,GLenum, GLclampf );
//BINDFUNC(GLboolean , glAreTexturesResident ,GLsizei, const GLuint *, GLboolean *);
//BINDFUNC(void , glArrayElement ,GLint );
BINDFUNC(void , glBegin ,GLenum);
BINDFUNC(void , glBindTexture ,GLenum, GLuint );
//BINDFUNC(void , glBitmap ,GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, const GLubyte *);
//BINDFUNC(void , glBlendColor ,GLclampf , GLclampf , GLclampf , GLclampf );
//BINDFUNC(void , glBlendEquation ,GLenum);
//BINDFUNC(void , glBlendEquationSeparate,GLenum, GLenum);
BINDFUNC(void , glBlendFunc ,GLenum , GLenum );
//BINDFUNC(void , glCallList ,GLuint );
//BINDFUNC(void , glCallLists ,GLsizei, GLenum, const GLvoid *);
BINDFUNC(void , glClear ,GLbitfield );
//BINDFUNC(void , glClearAccum ,GLfloat, GLfloat, GLfloat, GLfloat);
BINDFUNC(void , glClearColor ,GLclampf , GLclampf , GLclampf , GLclampf );
BINDFUNC(void , glClearDepth ,GLclampd );
//BINDFUNC(void , glClearIndex ,GLfloat );
//BINDFUNC(void , glClearStencil ,GLint);
BINDFUNC(void , glClipPlane ,GLenum , const GLdouble *);
//BINDFUNC(void , glColor3b ,GLbyte, GLbyte, GLbyte);
//BINDFUNC(void , glColor3bv ,const GLbyte *);
//BINDFUNC(void , glColor3d ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glColor3dv ,const GLdouble *);
BINDFUNC(void , glColor3f ,GLfloat, GLfloat, GLfloat);
BINDFUNC(void , glColor3fv ,const GLfloat *);
//BINDFUNC(void , glColor3i ,GLint, GLint, GLint);
//BINDFUNC(void , glColor3iv ,const GLint *);
//BINDFUNC(void , glColor3s ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glColor3sv ,const GLshort *);
BINDFUNC(void , glColor3ub ,GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glColor3ubv ,const GLubyte *);
//BINDFUNC(void , glColor3ui ,GLuint, GLuint, GLuint);
//BINDFUNC(void , glColor3uiv ,const GLuint *);
//BINDFUNC(void , glColor3us ,GLushort, GLushort, GLushort);
//BINDFUNC(void , glColor3usv ,const GLushort *);
//BINDFUNC(void , glColor4b ,GLbyte, GLbyte, GLbyte, GLbyte);
//BINDFUNC(void , glColor4bv ,const GLbyte *);
//BINDFUNC(void , glColor4d ,GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glColor4dv ,const GLdouble *);
BINDFUNC(void , glColor4f ,GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glColor4fv ,const GLfloat *);
//BINDFUNC(void , glColor4i ,GLint, GLint, GLint, GLint );
//BINDFUNC(void , glColor4iv ,const GLint *);
//BINDFUNC(void , glColor4s ,GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glColor4sv ,const GLshort *);
BINDFUNC(void , glColor4ub ,GLubyte, GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glColor4ubv ,const GLubyte *);
//BINDFUNC(void , glColor4ui ,GLuint, GLuint, GLuint, GLuint);
//BINDFUNC(void , glColor4uiv ,const GLuint *);
//BINDFUNC(void , glColor4us ,GLushort, GLushort, GLushort, GLushort);
//BINDFUNC(void , glColor4usv ,const GLushort *);
BINDFUNC(void , glColorMask ,GLboolean, GLboolean, GLboolean, GLboolean);
BINDFUNC(void , glColorMaterial ,GLenum, GLenum);
BINDFUNC(void , glColorPointer ,GLint, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glColorSubTable ,GLenum, GLsizei , GLsizei, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glColorTable ,GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glColorTableParameterfv ,GLenum, GLenum, const GLfloat *);
//BINDFUNC(void , glColorTableParameteriv ,GLenum, GLenum, const GLint *);
//BINDFUNC(void , glConvolutionFilter1D ,GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glConvolutionFilter2D ,GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glConvolutionParameterf ,GLenum, GLenum, GLfloats);
//BINDFUNC(void , glConvolutionParameterfv ,GLenum, GLenum, const GLfloat *);
//BINDFUNC(void , glConvolutionParameteri ,GLenum, GLenum, GLints);
//BINDFUNC(void , glConvolutionParameteriv ,GLenum, GLenum, const GLint *);
//BINDFUNC(void , glCopyColorSubTable ,GLenum, GLsizei , GLint, GLint, GLsizei);
//BINDFUNC(void , glCopyColorTable ,GLenum, GLenum, GLint, GLint, GLsizei);
//BINDFUNC(void , glCopyConvolutionFilter1D ,GLenum, GLenum, GLint, GLint, GLsizei);
//BINDFUNC(void , glCopyConvolutionFilter2D ,GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
//BINDFUNC(void , glCopyPixels ,GLint, GLint, GLsizei, GLsizei, GLenum);
//BINDFUNC(void , glCopyTexImage1D ,GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
//BINDFUNC(void , glCopyTexImage2D ,GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
//BINDFUNC(void , glCopyTexSubImage1D ,GLenum, GLint, GLint, GLint, GLint, GLsizei);
//BINDFUNC(void , glCopyTexSubImage2D ,GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
//BINDFUNC(void , glCopyTexSubImage3D ,GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
BINDFUNC(void , glCullFace ,GLenum);
//BINDFUNC(void , glDeleteLists ,GLuint , GLsizei );
BINDFUNC(void , glDeleteTextures ,GLsizei, const GLuint *);
BINDFUNC(void , glDepthFunc ,GLenum);
BINDFUNC(void , glDepthMask ,GLboolean );
BINDFUNC(void , glDepthRange ,GLclampd , GLclampd );
BINDFUNC(void , glDisable ,GLenum );
BINDFUNC(void , glDisableClientState ,GLenum );
BINDFUNC(void , glDrawArrays ,GLenum, GLint, GLsizei);
//BINDFUNC(void , glDrawBuffer ,GLenum);
BINDFUNC(void , glDrawElements ,GLenum, GLsizei, GLenum, const GLvoid *);
//BINDFUNC(void , glDrawPixels ,GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
BINDFUNC(void , glDrawRangeElements ,GLenum, GLuint , GLuint , GLsizei, GLenum, const GLvoid *);
//BINDFUNC(void , glEdgeFlag ,GLboolean );
//BINDFUNC(void , glEdgeFlagPointer ,GLsizei, const GLvoid *);
//BINDFUNC(void , glEdgeFlagv ,const GLboolean *);
BINDFUNC(void , glEnable ,GLenum );
BINDFUNC(void , glEnableClientState ,GLenum );
BINDFUNC(void , glEnd);
//BINDFUNC(void , glEndList);
//BINDFUNC(void , glEvalCoord1d ,GLdouble );
//BINDFUNC(void , glEvalCoord1dv ,const GLdouble *);
//BINDFUNC(void , glEvalCoord1f ,GLfloat );
//BINDFUNC(void , glEvalCoord1fv ,const GLfloat *);
//BINDFUNC(void , glEvalCoord2d ,GLdouble , GLdouble );
//BINDFUNC(void , glEvalCoord2dv ,const GLdouble *);
//BINDFUNC(void , glEvalCoord2f ,GLfloat , GLfloat );
//BINDFUNC(void , glEvalCoord2fv ,const GLfloat *);
//BINDFUNC(void , glEvalMesh1 ,GLenum, GLint , GLint );
//BINDFUNC(void , glEvalMesh2 ,GLenum, GLint , GLint , GLint , GLint );
//BINDFUNC(void , glEvalPoint1 ,GLint );
//BINDFUNC(void , glEvalPoint2 ,GLint , GLint );
//BINDFUNC(void , glFeedbackBuffer ,GLsizei , GLenum, GLfloat *);
//BINDFUNC(void , glFinish );
BINDFUNC(void , glFlush );
BINDFUNC(void , glFogf ,GLenum, GLfloat);
BINDFUNC(void , glFogfv ,GLenum, const GLfloat *);
BINDFUNC(void , glFogi ,GLenum, GLint);
//BINDFUNC(void , glFogiv ,GLenum, const GLint *);
BINDFUNC(void , glFrontFace ,GLenum);
BINDFUNC(void , glFrustum ,GLdouble , GLdouble, GLdouble , GLdouble, GLdouble, GLdouble);
//BINDFUNC(GLuint , glGenLists ,GLsizei );
BINDFUNC(void , glGenTextures ,GLsizei, GLuint *);
//BINDFUNC(void , glGetBooleanv ,GLenum, GLboolean *);
//BINDFUNC(void , glGetClipPlane ,GLenum , GLdouble *);
//BINDFUNC(void , glGetColorTable ,GLenum, GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetColorTableParameterfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetColorTableParameteriv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetConvolutionFilter ,GLenum, GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetConvolutionParameterfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetConvolutionParameteriv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetDoublev ,GLenum, GLdouble *);
BINDFUNC(GLenum , glGetError );
BINDFUNC(void , glGetFloatv ,GLenum, GLfloat *);
//BINDFUNC(void , glGetHistogram ,GLenum, GLboolean , GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetHistogramParameterfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetHistogramParameteriv ,GLenum, GLenum, GLint *);
BINDFUNC(void , glGetIntegerv ,GLenum, GLint *);
//BINDFUNC(void , glGetLightfv ,GLenum , GLenum, GLfloat *);
//BINDFUNC(void , glGetLightiv ,GLenum , GLenum, GLint *);
//BINDFUNC(void , glGetMapdv ,GLenum, GLenum , GLdouble *);
//BINDFUNC(void , glGetMapfv ,GLenum, GLenum , GLfloat *);
//BINDFUNC(void , glGetMapiv ,GLenum, GLenum , GLint *);
BINDFUNC(void , glGetMaterialfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetMaterialiv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetMinmax ,GLenum, GLboolean , GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetMinmaxParameterfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetMinmaxParameteriv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetPixelMapfv ,GLenum , GLfloat *);
//BINDFUNC(void , glGetPixelMapuiv ,GLenum , GLuint *);
//BINDFUNC(void , glGetPixelMapusv ,GLenum , GLushort *);
//BINDFUNC(void , glGetPointerv ,GLenum, GLvoid* *);
//BINDFUNC(void , glGetPolygonStipple ,GLubyte *);
//BINDFUNC(void , glGetSeparableFilter ,GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *);
BINDFUNC(const GLubyte * , glGetString ,GLenum );
//BINDFUNC(void , glGetTexEnvfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetTexEnviv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetTexGendv ,GLenum, GLenum, GLdouble *);
//BINDFUNC(void , glGetTexGenfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetTexGeniv ,GLenum, GLenum, GLint *);
BINDFUNC(void , glGetTexImage ,GLenum, GLint, GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glGetTexLevelParameterfv ,GLenum, GLint, GLenum, GLfloat *);
BINDFUNC(void , glGetTexLevelParameteriv ,GLenum, GLint, GLenum, GLint *);
//BINDFUNC(void , glGetTexParameterfv ,GLenum, GLenum, GLfloat *);
//BINDFUNC(void , glGetTexParameteriv ,GLenum, GLenum, GLint *);
BINDFUNC(void , glHint ,GLenum, GLenum);
//BINDFUNC(void , glHistogram ,GLenum, GLsizei, GLenum, GLboolean );
//BINDFUNC(void , glIndexMask ,GLuint);
//BINDFUNC(void , glIndexPointer ,GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glIndexd ,GLdouble );
//BINDFUNC(void , glIndexdv ,const GLdouble *);
//BINDFUNC(void , glIndexf ,GLfloat );
//BINDFUNC(void , glIndexfv ,const GLfloat *);
//BINDFUNC(void , glIndexi ,GLint );
//BINDFUNC(void , glIndexiv ,const GLint *);
//BINDFUNC(void , glIndexs ,GLshort );
//BINDFUNC(void , glIndexsv ,const GLshort *);
//BINDFUNC(void , glIndexub ,GLubyte );
//BINDFUNC(void , glIndexubv ,const GLubyte *);
//BINDFUNC(void , glInitNames );
//BINDFUNC(void , glInterleavedArrays ,GLenum, GLsizei, const GLvoid *);
BINDFUNC(GLboolean , glIsEnabled ,GLenum );
//BINDFUNC(GLboolean , glIsList ,GLuint );
BINDFUNC(GLboolean , glIsTexture ,GLuint );
//BINDFUNC(void , glLightModelf ,GLenum, GLfloat);
BINDFUNC(void , glLightModelfv ,GLenum, const GLfloat *);
BINDFUNC(void , glLightModeli ,GLenum, GLint);
//BINDFUNC(void , glLightModeliv ,GLenum, const GLint *);
BINDFUNC(void , glLightf ,GLenum , GLenum, GLfloat);
BINDFUNC(void , glLightfv ,GLenum , GLenum, const GLfloat *);
//BINDFUNC(void , glLighti ,GLenum , GLenum, GLint);
//BINDFUNC(void , glLightiv ,GLenum , GLenum, const GLint *);
//BINDFUNC(void , glLineStipple ,GLint , GLushort );
BINDFUNC(void , glLineWidth ,GLfloat);
//BINDFUNC(void , glListBase ,GLuint );
BINDFUNC(void , glLoadIdentity );
BINDFUNC(void , glLoadMatrixd ,const GLdouble *);
BINDFUNC(void , glLoadMatrixf ,const GLfloat *);
//BINDFUNC(void , glLoadName ,GLuint);
//BINDFUNC(void , glLogicOp ,GLenum );
//BINDFUNC(void , glMap1d ,GLenum, GLdouble, GLdouble, GLint, GLint, const GLdouble *);
//BINDFUNC(void , glMap1f ,GLenum, GLfloat, GLfloat, GLint, GLint, const GLfloat *);
//BINDFUNC(void , glMap2d ,GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint , GLint , const GLdouble *);
//BINDFUNC(void , glMap2f ,GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint , GLint , const GLfloat *);
//BINDFUNC(void , glMapGrid1d ,GLint, GLdouble, GLdouble);
//BINDFUNC(void , glMapGrid1f ,GLint, GLfloat, GLfloat);
//BINDFUNC(void , glMapGrid2d ,GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
//BINDFUNC(void , glMapGrid2f ,GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
BINDFUNC(void , glMaterialf ,GLenum, GLenum, GLfloat);
BINDFUNC(void , glMaterialfv ,GLenum, GLenum, const GLfloat *);
//BINDFUNC(void , glMateriali ,GLenum, GLenum, GLint);
//BINDFUNC(void , glMaterialiv ,GLenum, GLenum, const GLint *);
BINDFUNC(void , glMatrixMode ,GLenum);
//BINDFUNC(void , glMinmax ,GLenum, GLenum, GLboolean );
//BINDFUNC(void , glMultMatrixd ,const GLdouble *);
BINDFUNC(void , glMultMatrixf ,const GLfloat *);
//BINDFUNC(void , glNewList ,GLuint , GLenum);
//BINDFUNC(void , glNormal3b ,GLbyte , GLbyte , GLbyte );
//BINDFUNC(void , glNormal3bv ,const GLbyte *);
//BINDFUNC(void , glNormal3d ,GLdouble , GLdouble , GLdouble);
//BINDFUNC(void , glNormal3dv ,const GLdouble *);
BINDFUNC(void , glNormal3f ,GLfloat , GLfloat , GLfloat);
BINDFUNC(void , glNormal3fv ,const GLfloat *);
//BINDFUNC(void , glNormal3i ,GLint , GLint , Glint);
//BINDFUNC(void , glNormal3iv ,const GLint *);
//BINDFUNC(void , glNormal3s ,GLshort , GLshort , GLshort );
//BINDFUNC(void , glNormal3sv ,const GLshort *);
BINDFUNC(void , glNormalPointer ,GLenum, GLsizei, const GLvoid *);
BINDFUNC(void , glOrtho ,GLdouble , GLdouble, GLdouble , GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glPassThrough ,GLfloat);
//BINDFUNC(void , glPixelMapfv ,GLenum , GLint , const GLfloat *);
//BINDFUNC(void , glPixelMapuiv ,GLenum , GLint , const GLuint *);
//BINDFUNC(void , glPixelMapusv ,GLenum , GLint , const GLushort *);
BINDFUNC(void , glPixelStoref ,GLenum, GLfloat);
BINDFUNC(void , glPixelStorei ,GLenum, GLint);
BINDFUNC(void , glPixelTransferf ,GLenum, GLfloat);
BINDFUNC(void , glPixelTransferi ,GLenum, GLint);
//BINDFUNC(void , glPixelZoom ,GLfloat, GLfloat);
BINDFUNC(void , glPointSize ,GLfloat);
BINDFUNC(void , glPolygonMode ,GLenum, GLenum);
BINDFUNC(void , glPolygonOffset ,GLfloat , GLfloat );
//BINDFUNC(void , glPolygonStipple ,const GLubyte *);
BINDFUNC(void , glPopAttrib );
BINDFUNC(void , glPopClientAttrib );
BINDFUNC(void , glPopMatrix );
//BINDFUNC(void , glPopName );
//BINDFUNC(void , glPrioritizeTextures ,GLsizei, const GLuint *, const GLclampf *);
BINDFUNC(void , glPushAttrib ,GLbitfield );
BINDFUNC(void , glPushClientAttrib ,GLbitfield );
BINDFUNC(void , glPushMatrix );
//BINDFUNC(void , glPushName ,GLuint);
//BINDFUNC(void , glRasterPos2d ,GLdouble, GLdouble);
//BINDFUNC(void , glRasterPos2dv ,const GLdouble *);
//BINDFUNC(void , glRasterPos2f ,GLfloat, GLfloat);
//BINDFUNC(void , glRasterPos2fv ,const GLfloat *);
//BINDFUNC(void , glRasterPos2i ,GLint, GLint);
//BINDFUNC(void , glRasterPos2iv ,const GLint *);
//BINDFUNC(void , glRasterPos2s ,GLshort, GLshort);
//BINDFUNC(void , glRasterPos2sv ,const GLshort *);
//BINDFUNC(void , glRasterPos3d ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glRasterPos3dv ,const GLdouble *);
//BINDFUNC(void , glRasterPos3f ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glRasterPos3fv ,const GLfloat *);
//BINDFUNC(void , glRasterPos3i ,GLint, GLint, GLint);
//BINDFUNC(void , glRasterPos3iv ,const GLint *);
//BINDFUNC(void , glRasterPos3s ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glRasterPos3sv ,const GLshort *);
//BINDFUNC(void , glRasterPos4d ,GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glRasterPos4dv ,const GLdouble *);
//BINDFUNC(void , glRasterPos4f ,GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glRasterPos4fv ,const GLfloat *);
//BINDFUNC(void , glRasterPos4i ,GLint, GLint, GLint, GLint);
//BINDFUNC(void , glRasterPos4iv ,const GLint *);
//BINDFUNC(void , glRasterPos4s ,GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glRasterPos4sv ,const GLshort *);
BINDFUNC(void , glReadBuffer ,GLenum);
BINDFUNC(void , glReadPixels ,GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *);
//BINDFUNC(void , glRectd ,GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glRectdv ,const GLdouble *, const GLdouble *);
//BINDFUNC(void , glRectf ,GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glRectfv ,const GLfloat *, const GLfloat *);
//BINDFUNC(void , glRecti ,GLint, GLint, GLint, GLint);
//BINDFUNC(void , glRectiv ,const GLint *, const GLint *);
//BINDFUNC(void , glRects ,GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glRectsv ,const GLshort *, const GLshort *);
//BINDFUNC(GLint , glRenderMode ,GLenum);
//BINDFUNC(void , glResetHistogram ,GLenum);
//BINDFUNC(void , glResetMinmax ,GLenum);
//BINDFUNC(void , glRotated ,GLdouble , GLdouble, GLdouble, GLdouble);
BINDFUNC(void , glRotatef ,GLfloat , GLfloat , GLfloat , GLfloat );
//BINDFUNC(void , glScaled ,GLdouble , GLdouble , GLdouble );
BINDFUNC(void , glScalef ,GLfloat , GLfloat , GLfloat );
BINDFUNC(void , glScissor ,GLint , GLint , GLsizei , GLsizei );
//BINDFUNC(void , glSelectBuffer ,GLsizei , GLuint *);
//BINDFUNC(void , glSeparableFilter2D ,GLenum , GLenum , GLsizei , GLsizei , GLenum , GLenum , const GLvoid *, const GLvoid *);
BINDFUNC(void , glShadeModel ,GLenum );
//BINDFUNC(void , glStencilFunc ,GLenum , GLint , GLuint );
//BINDFUNC(void , glStencilMask ,GLuint );
//BINDFUNC(void , glStencilOp ,GLenum , GLenum , GLenum );
//BINDFUNC(void , glTexCoord1d ,GLdouble );
//BINDFUNC(void , glTexCoord1dv ,const GLdouble *);
//BINDFUNC(void , glTexCoord1f ,GLfloat );
//BINDFUNC(void , glTexCoord1fv ,const GLfloat *);
//BINDFUNC(void , glTexCoord1i ,GLint );
//BINDFUNC(void , glTexCoord1iv ,const GLint *);
//BINDFUNC(void , glTexCoord1s ,GLshort );
//BINDFUNC(void , glTexCoord1sv ,const GLshort *);
//BINDFUNC(void , glTexCoord2d ,GLdouble , GLdouble );
//BINDFUNC(void , glTexCoord2dv ,const GLdouble *);
BINDFUNC(void , glTexCoord2f ,GLfloat , GLfloat );
//BINDFUNC(void , glTexCoord2fv ,const GLfloat *);
//BINDFUNC(void , glTexCoord2i ,GLint , GLint );
//BINDFUNC(void , glTexCoord2iv ,const GLint *);
//BINDFUNC(void , glTexCoord2s ,GLshort , GLshort );
//BINDFUNC(void , glTexCoord2sv ,const GLshort *);
//BINDFUNC(void , glTexCoord3d ,GLdouble , GLdouble , GLdouble );
//BINDFUNC(void , glTexCoord3dv ,const GLdouble *);
//BINDFUNC(void , glTexCoord3f ,GLfloat , GLfloat , GLfloat );
//BINDFUNC(void , glTexCoord3fv ,const GLfloat *);
//BINDFUNC(void , glTexCoord3i ,GLint , GLint , GLint );
//BINDFUNC(void , glTexCoord3iv ,const GLint *);
//BINDFUNC(void , glTexCoord3s ,GLshort , GLshort , GLshort );
//BINDFUNC(void , glTexCoord3sv ,const GLshort *);
//BINDFUNC(void , glTexCoord4d ,GLdouble , GLdouble , GLdouble , GLdouble );
//BINDFUNC(void , glTexCoord4dv ,const GLdouble *);
//BINDFUNC(void , glTexCoord4f ,GLfloat , GLfloat , GLfloat , GLfloat );
//BINDFUNC(void , glTexCoord4fv ,const GLfloat *);
//BINDFUNC(void , glTexCoord4i ,GLint , GLint , GLint , GLint );
//BINDFUNC(void , glTexCoord4iv ,const GLint *);
//BINDFUNC(void , glTexCoord4s ,GLshort , GLshort , GLshort , GLshort );
//BINDFUNC(void , glTexCoord4sv ,const GLshort *);
BINDFUNC(void , glTexCoordPointer ,GLint , GLenum , GLsizei , const GLvoid *);
BINDFUNC(void , glTexEnvf ,GLenum , GLenum , GLfloat );
BINDFUNC(void , glTexEnvfv ,GLenum, GLenum, const GLfloat *);
BINDFUNC(void , glTexEnvi ,GLenum, GLenum, GLint);
BINDFUNC(void , glTexEnviv ,GLenum, GLenum, const GLint *);
//BINDFUNC(void , glTexGend ,GLenum, GLenum, GLdouble);
//BINDFUNC(void , glTexGendv ,GLenum, GLenum, const GLdouble *);
//BINDFUNC(void , glTexGenf ,GLenum, GLenum, GLfloat);
//BINDFUNC(void , glTexGenfv ,GLenum, GLenum, const GLfloat *);
BINDFUNC(void , glTexGeni ,GLenum, GLenum, GLint);
//BINDFUNC(void , glTexGeniv ,GLenum, GLenum, const GLint *);
BINDFUNC(void , glTexImage1D ,GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
BINDFUNC(void , glTexImage2D ,GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glTexImage3D ,GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
BINDFUNC(void , glTexParameterf ,GLenum, GLenum, GLfloat);
BINDFUNC(void , glTexParameterfv ,GLenum, GLenum, const GLfloat *);
BINDFUNC(void , glTexParameteri ,GLenum, GLenum, GLint);
//BINDFUNC(void , glTexParameteriv ,GLenum, GLenum, const GLint *);
//BINDFUNC(void , glTexSubImage1D ,GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid *);
BINDFUNC(void , glTexSubImage2D ,GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
//BINDFUNC(void , glTexSubImage3D ,GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
BINDFUNC(void , glTranslated ,GLdouble, GLdouble, GLdouble);
BINDFUNC(void , glTranslatef ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertex2d ,GLdouble, GLdouble);
//BINDFUNC(void , glVertex2dv ,const GLdouble *);
BINDFUNC(void , glVertex2f ,GLfloat, GLfloat);
//BINDFUNC(void , glVertex2fv ,const GLfloat *);
BINDFUNC(void , glVertex2i ,GLint, GLint);
//BINDFUNC(void , glVertex2iv ,const GLint *);
//BINDFUNC(void , glVertex2s ,GLshort, GLshort);
//BINDFUNC(void , glVertex2sv ,const GLshort *);
//BINDFUNC(void , glVertex3d ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertex3dv ,const GLdouble *);
BINDFUNC(void , glVertex3f ,GLfloat, GLfloat, GLfloat);
BINDFUNC(void , glVertex3fv ,const GLfloat *);
//BINDFUNC(void , glVertex3i ,GLint, GLint, GLint);
//BINDFUNC(void , glVertex3iv ,const GLint *);
//BINDFUNC(void , glVertex3s ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertex3sv ,const GLshort *);
//BINDFUNC(void , glVertex4d ,GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertex4dv ,const GLdouble *);
BINDFUNC(void , glVertex4f ,GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertex4fv ,const GLfloat *);
//BINDFUNC(void , glVertex4i ,GLint, GLint, GLint, GLint);
//BINDFUNC(void , glVertex4iv ,const GLint *);
//BINDFUNC(void , glVertex4s ,GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertex4sv ,const GLshort *);
BINDFUNC(void , glVertexPointer ,GLint, GLenum, GLsizei, const GLvoid *);
BINDFUNC(void , glViewport ,GLint, GLint, GLsizei, GLsizei);
//BINDFUNC(void , glSampleCoverage ,GLclampf, GLboolean);
//BINDFUNC(void , glSamplePass ,GLenum);
//BINDFUNC(void , glLoadTransposeMatrixf ,const GLfloat *);
//BINDFUNC(void , glLoadTransposeMatrixd ,const GLdouble *);
//BINDFUNC(void , glMultTransposeMatrixf ,const GLfloat *);
//BINDFUNC(void , glMultTransposeMatrixd ,const GLdouble *);
//BINDFUNC(void , glCompressedTexImage3D ,GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexImage2D ,GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexImage1D ,GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage3D ,GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage2D ,GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glCompressedTexSubImage1D ,GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glGetCompressedTexImage ,GLenum, GLint, GLvoid *);
//BINDFUNC(void , glActiveTexture ,GLenum);
//BINDFUNC(void , glClientActiveTexture ,GLenum);
//BINDFUNC(void , glMultiTexCoord1d ,GLenum, GLdouble);
//BINDFUNC(void , glMultiTexCoord1dv ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord1f ,GLenum, GLfloat);
//BINDFUNC(void , glMultiTexCoord1fv ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord1i ,GLenum, GLint);
//BINDFUNC(void , glMultiTexCoord1iv ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord1s ,GLenum, GLshort);
//BINDFUNC(void , glMultiTexCoord1sv ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord2d ,GLenum, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord2dv ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord2f ,GLenum, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord2fv ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord2i ,GLenum, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord2iv ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord2s ,GLenum, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord2sv ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord3d ,GLenum, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord3dv ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord3f ,GLenum, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord3fv ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord3i ,GLenum, GLint, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord3iv ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord3s ,GLenum, GLshort, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord3sv ,GLenum, const GLshort *);
//BINDFUNC(void , glMultiTexCoord4d ,GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glMultiTexCoord4dv ,GLenum, const GLdouble *);
//BINDFUNC(void , glMultiTexCoord4f ,GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glMultiTexCoord4fv ,GLenum, const GLfloat *);
//BINDFUNC(void , glMultiTexCoord4i ,GLenum, GLint, GLint, GLint, GLint);
//BINDFUNC(void , glMultiTexCoord4iv ,GLenum, const GLint *);
//BINDFUNC(void , glMultiTexCoord4s ,GLenum, GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glMultiTexCoord4sv ,GLenum, const GLshort *);
//BINDFUNC(void , glFogCoordf ,GLfloat);
//BINDFUNC(void , glFogCoordfv ,const GLfloat *);
//BINDFUNC(void , glFogCoordd ,GLdouble);
//BINDFUNC(void , glFogCoorddv ,const GLdouble *);
//BINDFUNC(void , glFogCoordPointer ,GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glSecondaryColor3b ,GLbyte, GLbyte, GLbyte);
//BINDFUNC(void , glSecondaryColor3bv ,const GLbyte *);
//BINDFUNC(void , glSecondaryColor3d ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glSecondaryColor3dv ,const GLdouble *);
//BINDFUNC(void , glSecondaryColor3f ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glSecondaryColor3fv ,const GLfloat *);
//BINDFUNC(void , glSecondaryColor3i ,GLint, GLint, GLint);
//BINDFUNC(void , glSecondaryColor3iv ,const GLint *);
//BINDFUNC(void , glSecondaryColor3s ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glSecondaryColor3sv ,const GLshort *);
//BINDFUNC(void , glSecondaryColor3ub ,GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glSecondaryColor3ubv ,const GLubyte);
//BINDFUNC(void , glSecondaryColor3ui ,GLuint, GLuint, GLuint);
//BINDFUNC(void , glSecondaryColor3uiv ,const GLuint *);
//BINDFUNC(void , glSecondaryColor3us ,GLushort, GLushort, GLushort);
//BINDFUNC(void , glSecondaryColor3usv ,const GLushort *);
//BINDFUNC(void , glSecondaryColorPointer ,GLint, GLenum, GLsizei, const GLvoid *);
//BINDFUNC(void , glPointParameterf ,GLenum, GLfloat);
//BINDFUNC(void , glPointParameterfv ,GLenum, const GLfloat *);
//BINDFUNC(void , glPointParameteri ,GLenum, GLint);
//BINDFUNC(void , glPointParameteriv ,GLenum, const GLint *);
//BINDFUNC(void , glBlendFuncSeparate ,GLenum , GLenum , GLenum , GLenum );
//BINDFUNC(void , glMultiDrawArrays ,GLenum , const GLint *, const GLsizei *, GLsizei );
//BINDFUNC(void , glMultiDrawElements ,GLenum , const GLsizei *, GLenum, const GLvoid* *, GLsizei );
//BINDFUNC(void , glWindowPos2d ,GLdouble, GLdouble);
//BINDFUNC(void , glWindowPos2dv ,const GLdouble *);
//BINDFUNC(void , glWindowPos2f ,GLfloat, GLfloat);
//BINDFUNC(void , glWindowPos2fv ,const GLfloat *);
//BINDFUNC(void , glWindowPos2i ,GLint, GLint);
//BINDFUNC(void , glWindowPos2iv ,const GLint *);
//BINDFUNC(void , glWindowPos2s ,GLshort, GLshort);
//BINDFUNC(void , glWindowPos2sv ,const GLshort *);
//BINDFUNC(void , glWindowPos3d ,GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glWindowPos3dv ,const GLdouble *);
//BINDFUNC(void , glWindowPos3f ,GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glWindowPos3fv ,const GLfloat *);
//BINDFUNC(void , glWindowPos3i ,GLint, GLint, GLint);
//BINDFUNC(void , glWindowPos3iv ,const GLint *);
//BINDFUNC(void , glWindowPos3s ,GLshort, GLshort, GLshort);
//BINDFUNC(void , glWindowPos3sv ,const GLshort *);
//BINDFUNC(void , glGenQueries,GLsizei , GLuint *);
//BINDFUNC(void , glDeleteQueries,GLsizei , const GLuint *);
//BINDFUNC(GLboolean , glIsQuery,GLuint );
//BINDFUNC(void , glBeginQuery,GLenum, GLuint );
//BINDFUNC(void , glEndQuery,GLenum);
//BINDFUNC(void , glGetQueryiv,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetQueryObjectiv,GLuint , GLenum, GLint *);
//BINDFUNC(void , glGetQueryObjectuiv,GLuint , GLenum, GLuint *);
//BINDFUNC(void , glBindBuffer ,GLenum, GLuint );
//BINDFUNC(void , glDeleteBuffers ,GLsizei , const GLuint *);
//BINDFUNC(void , glGenBuffers ,GLsizei , GLuint *);
//BINDFUNC(GLboolean , glIsBuffer ,GLuint );
//BINDFUNC(void , glBufferData ,GLenum, GLsizeiptr , const GLvoid *, GLenum );
//BINDFUNC(void , glBufferSubData ,GLenum, GLintptr , GLsizeiptr , const GLvoid *);
//BINDFUNC(void , glGetBufferSubData ,GLenum, GLintptr, GLsizeiptr, GLvoid *);
//BINDFUNC(GLvoid * , glMapBuffer ,GLenum, GLenum );
//BINDFUNC(GLboolean , glUnmapBuffer ,GLenum);
//BINDFUNC(void , glGetBufferParameteriv ,GLenum, GLenum, GLint *);
//BINDFUNC(void , glGetBufferPointerv ,GLenum, GLenum, GLvoid **);
//BINDFUNC(void , glDrawBuffers ,GLsizei, const GLenum *);
//BINDFUNC(void , glVertexAttrib1d ,GLuint, GLdouble);
//BINDFUNC(void , glVertexAttrib1dv ,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib1f ,GLuint, GLfloat);
//BINDFUNC(void , glVertexAttrib1fv ,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib1s ,GLuint, GLshort);
//BINDFUNC(void , glVertexAttrib1sv ,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib2d ,GLuint, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib2dv ,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib2f ,GLuint, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib2fv ,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib2s ,GLuint, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib2sv ,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib3d ,GLuint, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib3dv ,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib3f ,GLuint, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib3fv ,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib3s ,GLuint, GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib3sv ,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4Nbv ,GLuint, const GLbyte *);
//BINDFUNC(void , glVertexAttrib4Niv ,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttrib4Nsv ,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4Nub ,GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
//BINDFUNC(void , glVertexAttrib4Nubv ,GLuint, const GLubyte);
//BINDFUNC(void , glVertexAttrib4Nuiv ,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttrib4Nusv ,GLuint, const GLushort *);
//BINDFUNC(void , glVertexAttrib4bv ,GLuint, const GLbyte *);
//BINDFUNC(void , glVertexAttrib4d ,GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
//BINDFUNC(void , glVertexAttrib4dv ,GLuint, const GLdouble *);
//BINDFUNC(void , glVertexAttrib4f ,GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glVertexAttrib4fv ,GLuint, const GLfloat *);
//BINDFUNC(void , glVertexAttrib4iv ,GLuint, const GLint *);
//BINDFUNC(void , glVertexAttrib4s ,GLuint, GLshort, GLshort, GLshort, GLshort);
//BINDFUNC(void , glVertexAttrib4sv ,GLuint, const GLshort *);
//BINDFUNC(void , glVertexAttrib4ubv ,GLuint, const GLubyte);
//BINDFUNC(void , glVertexAttrib4uiv ,GLuint, const GLuint *);
//BINDFUNC(void , glVertexAttrib4usv ,GLuint, const GLushort *);
//BINDFUNC(void , glVertexAttribPointer ,GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid *);
//BINDFUNC(void , glEnableVertexAttribArray ,GLuint);
//BINDFUNC(void , glDisableVertexAttribArray ,GLuint);
//BINDFUNC(void , glGetVertexAttribdv ,GLuint, GLenum, GLdouble *);
//BINDFUNC(void , glGetVertexAttribfv ,GLuint, GLenum, GLfloat *);
//BINDFUNC(void , glGetVertexAttribiv ,GLuint, GLenum, GLint *);
//BINDFUNC(void , glGetVertexAttribPointerv ,GLuint, GLenum, GLvoid* *);
//BINDFUNC(void , glDeleteShader ,GLuint);
//BINDFUNC(void , glDetachShader ,GLuint, GLuint);
//BINDFUNC(GLuint , glCreateShader ,GLenum);
//BINDFUNC(void , glShaderSource ,GLuint, GLsizei, const GLchar **, const GLint *);
//BINDFUNC(void , glCompileShader ,GLuint);
//BINDFUNC(GLuint , glCreateProgram );
//BINDFUNC(void , glAttachShader ,GLuint, GLuint);
//BINDFUNC(void , glLinkProgram ,GLuint);
//BINDFUNC(void , glUseProgram ,GLuint);
//BINDFUNC(void , glDeleteProgram ,GLuint);
//BINDFUNC(void , glValidateProgram ,GLuint);
//BINDFUNC(void , glUniform1f ,GLint, GLfloat);
//BINDFUNC(void , glUniform2f ,GLint, GLfloat, GLfloat);
//BINDFUNC(void , glUniform3f ,GLint, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glUniform4f ,GLint, GLfloat, GLfloat, GLfloat, GLfloat);
//BINDFUNC(void , glUniform1i ,GLint, GLint);
//BINDFUNC(void , glUniform2i ,GLint, GLint, GLint);
//BINDFUNC(void , glUniform3i ,GLint, GLint, GLint, GLint);
//BINDFUNC(void , glUniform4i ,GLint, GLint, GLint, GLint, GLint);
//BINDFUNC(void , glUniform1fv ,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform2fv ,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform3fv ,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform4fv ,GLint, GLsizei, const GLfloat *);
//BINDFUNC(void , glUniform1iv ,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform2iv ,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform3iv ,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniform4iv ,GLint, GLsizei, const GLint *);
//BINDFUNC(void , glUniformMatrix2fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix3fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix4fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(GLboolean , glIsShader ,GLuint);
//BINDFUNC(GLboolean , glIsProgram ,GLuint);
//BINDFUNC(void , glGetShaderiv ,GLuint, GLenum, GLint *);
//BINDFUNC(void , glGetProgramiv ,GLuint, GLenum, GLint *);
//BINDFUNC(void , glGetAttachedShaders ,GLuint, GLsizei , GLsizei *, GLuint *);
//BINDFUNC(void , glGetShaderInfoLog ,GLuint, GLsizei , GLsizei *, GLchar *);
//BINDFUNC(void , glGetProgramInfoLog ,GLuint, GLsizei , GLsizei *, GLchar *);
//BINDFUNC(GLint , glGetUniformLocation ,GLuint, const GLchar *);
//BINDFUNC(void , glGetActiveUniform ,GLuint, GLuint, GLsizei , GLsizei *, GLint *, GLenum *, GLchar *);
//BINDFUNC(void , glGetUniformfv ,GLuint, GLint, GLfloat *);
//BINDFUNC(void , glGetUniformiv ,GLuint, GLint, GLint *);
//BINDFUNC(void , glGetShaderSource ,GLuint, GLsizei , GLsizei *, GLchar *);
//BINDFUNC(void , glBindAttribLocation ,GLuint, GLuint, const GLchar *);
//BINDFUNC(void , glGetActiveAttrib ,GLuint, GLuint, GLsizei , GLsizei *, GLint *, GLenum *, GLchar *);
//BINDFUNC(GLint , glGetAttribLocation ,GLuint, const GLchar *);
//BINDFUNC(void , glStencilFuncSeparate ,GLenum, GLenum, GLint, GLuint);
//BINDFUNC(void , glStencilOpSeparate ,GLenum, GLenum, GLenum, GLenum);
//BINDFUNC(void , glStencilMaskSeparate ,GLenum, GLuint);
//BINDFUNC(void , glUniformMatrix2x3fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix3x2fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix2x4fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix4x2fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix3x4fv ,GLint, GLsizei, GLboolean, const GLfloat *);
//BINDFUNC(void , glUniformMatrix4x3fv ,GLint, GLsizei, GLboolean, const GLfloat *);

void init_binding_GL(lua_State *L) {
	int ffi = lua_gettop(L);

	FFI_CDEF_FILE("include/GL_types.h");
	BEGIN_PACKAGE(gl)

BINDNAME(glActiveTextureARB);
BINDNAME(glClientActiveTextureARB);
//BINDNAME(glMultiTexCoord1dARB);
//BINDNAME(glMultiTexCoord1dvARB);
//BINDNAME(glMultiTexCoord1fARB);
//BINDNAME(glMultiTexCoord1fvARB);
//BINDNAME(glMultiTexCoord1iARB);
//BINDNAME(glMultiTexCoord1ivARB);
//BINDNAME(glMultiTexCoord1sARB);
//BINDNAME(glMultiTexCoord1svARB);
//BINDNAME(glMultiTexCoord2dARB);
//BINDNAME(glMultiTexCoord2dvARB);
BINDNAME(glMultiTexCoord2fARB);
//BINDNAME(glMultiTexCoord2fvARB);
//BINDNAME(glMultiTexCoord2iARB);
//BINDNAME(glMultiTexCoord2ivARB);
//BINDNAME(glMultiTexCoord2sARB);
//BINDNAME(glMultiTexCoord2svARB);
//BINDNAME(glMultiTexCoord3dARB);
//BINDNAME(glMultiTexCoord3dvARB);
//BINDNAME(glMultiTexCoord3fARB);
//BINDNAME(glMultiTexCoord3fvARB);
//BINDNAME(glMultiTexCoord3iARB);
//BINDNAME(glMultiTexCoord3ivARB);
//BINDNAME(glMultiTexCoord3sARB);
//BINDNAME(glMultiTexCoord3svARB);
//BINDNAME(glMultiTexCoord4dARB);
//BINDNAME(glMultiTexCoord4dvARB);
//BINDNAME(glMultiTexCoord4fARB);
//BINDNAME(glMultiTexCoord4fvARB);
//BINDNAME(glMultiTexCoord4iARB);
//BINDNAME(glMultiTexCoord4ivARB);
//BINDNAME(glMultiTexCoord4sARB);
//BINDNAME(glMultiTexCoord4svARB);
//BINDNAME(glLoadTransposeMatrixfARB);
//BINDNAME(glLoadTransposeMatrixdARB);
//BINDNAME(glMultTransposeMatrixfARB);
//BINDNAME(glMultTransposeMatrixdARB);
//BINDNAME(glSampleCoverageARB);
//BINDNAME(glSamplePassARB);
//BINDNAME(glCompressedTexImage3DARB);
//BINDNAME(glCompressedTexImage2DARB);
//BINDNAME(glCompressedTexImage1DARB);
//BINDNAME(glCompressedTexSubImage3DARB);
//BINDNAME(glCompressedTexSubImage2DARB);
//BINDNAME(glCompressedTexSubImage1DARB);
//BINDNAME(glGetCompressedTexImageARB);
//BINDNAME(glWeightbvARB);
//BINDNAME(glWeightsvARB);
//BINDNAME(glWeightivARB);
//BINDNAME(glWeightfvARB);
//BINDNAME(glWeightdvARB);
//BINDNAME(glWeightubvARB);
//BINDNAME(glWeightusvARB);
//BINDNAME(glWeightuivARB);
//BINDNAME(glWeightPointerARB);
//BINDNAME(glVertexBlendARB);
//BINDNAME(glWindowPos2dARB);
//BINDNAME(glWindowPos2dvARB);
//BINDNAME(glWindowPos2fARB);
//BINDNAME(glWindowPos2fvARB);
//BINDNAME(glWindowPos2iARB);
//BINDNAME(glWindowPos2ivARB);
//BINDNAME(glWindowPos2sARB);
//BINDNAME(glWindowPos2svARB);
//BINDNAME(glWindowPos3dARB);
//BINDNAME(glWindowPos3dvARB);
//BINDNAME(glWindowPos3fARB);
//BINDNAME(glWindowPos3fvARB);
//BINDNAME(glWindowPos3iARB);
//BINDNAME(glWindowPos3ivARB);
//BINDNAME(glWindowPos3sARB);
//BINDNAME(glWindowPos3svARB);
//BINDNAME(glGenQueriesARB);
//BINDNAME(glDeleteQueriesARB);
//BINDNAME(glIsQueryARB);
//BINDNAME(glBeginQueryARB);
//BINDNAME(glEndQueryARB);
//BINDNAME(glGetQueryivARB);
//BINDNAME(glGetQueryObjectivARB);
//BINDNAME(glGetQueryObjectuivARB);
//BINDNAME(glPointParameterfARB);
//BINDNAME(glPointParameterfvARB);
//BINDNAME(glBindProgramARB);
//BINDNAME(glDeleteProgramsARB);
//BINDNAME(glGenProgramsARB);
//BINDNAME(glIsProgramARB);
//BINDNAME(glProgramEnvParameter4dARB);
//BINDNAME(glProgramEnvParameter4dvARB);
//BINDNAME(glProgramEnvParameter4fARB);
//BINDNAME(glProgramEnvParameter4fvARB);
//BINDNAME(glProgramLocalParameter4dARB);
//BINDNAME(glProgramLocalParameter4dvARB);
//BINDNAME(glProgramLocalParameter4fARB);
//BINDNAME(glProgramLocalParameter4fvARB);
//BINDNAME(glGetProgramEnvParameterdvARB);
//BINDNAME(glGetProgramEnvParameterfvARB);
//BINDNAME(glProgramEnvParameters4fvEXT);
//BINDNAME(glProgramLocalParameters4fvEXT);
//BINDNAME(glGetProgramLocalParameterdvARB);
//BINDNAME(glGetProgramLocalParameterfvARB);
//BINDNAME(glProgramStringARB);
//BINDNAME(glGetProgramStringARB);
//BINDNAME(glGetProgramivARB);
//BINDNAME(glVertexAttrib1dARB);
//BINDNAME(glVertexAttrib1dvARB);
//BINDNAME(glVertexAttrib1fARB);
//BINDNAME(glVertexAttrib1fvARB);
//BINDNAME(glVertexAttrib1sARB);
//BINDNAME(glVertexAttrib1svARB);
//BINDNAME(glVertexAttrib2dARB);
//BINDNAME(glVertexAttrib2dvARB);
//BINDNAME(glVertexAttrib2fARB);
//BINDNAME(glVertexAttrib2fvARB);
//BINDNAME(glVertexAttrib2sARB);
//BINDNAME(glVertexAttrib2svARB);
//BINDNAME(glVertexAttrib3dARB);
//BINDNAME(glVertexAttrib3dvARB);
//BINDNAME(glVertexAttrib3fARB);
//BINDNAME(glVertexAttrib3fvARB);
//BINDNAME(glVertexAttrib3sARB);
//BINDNAME(glVertexAttrib3svARB);
//BINDNAME(glVertexAttrib4NbvARB);
//BINDNAME(glVertexAttrib4NivARB);
//BINDNAME(glVertexAttrib4NsvARB);
//BINDNAME(glVertexAttrib4NubARB);
//BINDNAME(glVertexAttrib4NubvARB);
//BINDNAME(glVertexAttrib4NuivARB);
//BINDNAME(glVertexAttrib4NusvARB);
//BINDNAME(glVertexAttrib4bvARB);
//BINDNAME(glVertexAttrib4dARB);
//BINDNAME(glVertexAttrib4dvARB);
//BINDNAME(glVertexAttrib4fARB);
//BINDNAME(glVertexAttrib4fvARB);
//BINDNAME(glVertexAttrib4ivARB);
//BINDNAME(glVertexAttrib4sARB);
//BINDNAME(glVertexAttrib4svARB);
//BINDNAME(glVertexAttrib4ubvARB);
//BINDNAME(glVertexAttrib4uivARB);
//BINDNAME(glVertexAttrib4usvARB);
//BINDNAME(glVertexAttribPointerARB);
//BINDNAME(glDisableVertexAttribArrayARB);
//BINDNAME(glEnableVertexAttribArrayARB);
//BINDNAME(glGetVertexAttribPointervARB);
//BINDNAME(glGetVertexAttribdvARB);
//BINDNAME(glGetVertexAttribfvARB);
//BINDNAME(glGetVertexAttribivARB);
//BINDNAME(glDeleteObjectARB);
//BINDNAME(glGetHandleARB);
//BINDNAME(glDetachObjectARB);
//BINDNAME(glCreateShaderObjectARB);
//BINDNAME(glShaderSourceARB);
//BINDNAME(glCompileShaderARB);
//BINDNAME(glCreateProgramObjectARB);
//BINDNAME(glAttachObjectARB);
//BINDNAME(glLinkProgramARB);
//BINDNAME(glUseProgramObjectARB);
//BINDNAME(glValidateProgramARB);
//BINDNAME(glUniform1fARB);
//BINDNAME(glUniform2fARB);
//BINDNAME(glUniform3fARB);
//BINDNAME(glUniform4fARB);
//BINDNAME(glUniform1iARB);
//BINDNAME(glUniform2iARB);
//BINDNAME(glUniform3iARB);
//BINDNAME(glUniform4iARB);
//BINDNAME(glUniform1fvARB);
//BINDNAME(glUniform2fvARB);
//BINDNAME(glUniform3fvARB);
//BINDNAME(glUniform4fvARB);
//BINDNAME(glUniform1ivARB);
//BINDNAME(glUniform2ivARB);
//BINDNAME(glUniform3ivARB);
//BINDNAME(glUniform4ivARB);
//BINDNAME(glUniformMatrix2fvARB);
//BINDNAME(glUniformMatrix3fvARB);
//BINDNAME(glUniformMatrix4fvARB);
//BINDNAME(glGetObjectParameterfvARB);
//BINDNAME(glGetObjectParameterivARB);
//BINDNAME(glGetInfoLogARB);
//BINDNAME(glGetAttachedObjectsARB);
//BINDNAME(glGetUniformLocationARB);
//BINDNAME(glGetActiveUniformARB);
//BINDNAME(glGetUniformfvARB);
//BINDNAME(glGetUniformivARB);
//BINDNAME(glGetShaderSourceARB);
//BINDNAME(glBindAttribLocationARB);
//BINDNAME(glGetActiveAttribARB);
//BINDNAME(glGetAttribLocationARB);
//BINDNAME(glBindBufferARB);
//BINDNAME(glDeleteBuffersARB);
//BINDNAME(glGenBuffersARB);
//BINDNAME(glIsBufferARB);
//BINDNAME(glBufferDataARB);
//BINDNAME(glBufferSubDataARB);
//BINDNAME(glGetBufferSubDataARB);
//BINDNAME(glMapBufferARB);
//BINDNAME(glUnmapBufferARB);
//BINDNAME(glGetBufferParameterivARB);
//BINDNAME(glGetBufferPointervARB);
//BINDNAME(glDrawBuffersARB);
//BINDNAME(glClampColorARB);
//BINDNAME(glDrawArraysInstancedARB);
//BINDNAME(glDrawElementsInstancedARB);
//BINDNAME(glVertexAttribDivisorARB);
//BINDNAME(glGetUniformIndices);
//BINDNAME(glGetActiveUniformsiv);
//BINDNAME(glGetActiveUniformName);
//BINDNAME(glGetUniformBlockIndex);
//BINDNAME(glGetActiveUniformBlockiv);
//BINDNAME(glGetActiveUniformBlockName);
//BINDNAME(glBindBufferRange);
//BINDNAME(glBindBufferBase);
//BINDNAME(glGetIntegeri_v);
//BINDNAME(glUniformBlockBinding);
//BINDNAME(glBlendColorEXT);
//BINDNAME(glBlendEquationEXT);
//BINDNAME(glLockArraysEXT);
//BINDNAME(glUnlockArraysEXT);
//BINDNAME(glDrawRangeElementsEXT);
//BINDNAME(glSecondaryColor3bEXT);
//BINDNAME(glSecondaryColor3bvEXT);
//BINDNAME(glSecondaryColor3dEXT);
//BINDNAME(glSecondaryColor3dvEXT);
//BINDNAME(glSecondaryColor3fEXT);
//BINDNAME(glSecondaryColor3fvEXT);
//BINDNAME(glSecondaryColor3iEXT);
//BINDNAME(glSecondaryColor3ivEXT);
//BINDNAME(glSecondaryColor3sEXT);
//BINDNAME(glSecondaryColor3svEXT);
//BINDNAME(glSecondaryColor3ubEXT);
//BINDNAME(glSecondaryColor3ubvEXT);
//BINDNAME(glSecondaryColor3uiEXT);
//BINDNAME(glSecondaryColor3uivEXT);
//BINDNAME(glSecondaryColor3usEXT);
//BINDNAME(glSecondaryColor3usvEXT);
//BINDNAME(glSecondaryColorPointerEXT);
//BINDNAME(glMultiDrawArraysEXT);
//BINDNAME(glMultiDrawElementsEXT);
//BINDNAME(glFogCoordfEXT);
//BINDNAME(glFogCoordfvEXT);
//BINDNAME(glFogCoorddEXT);
//BINDNAME(glFogCoorddvEXT);
//BINDNAME(glFogCoordPointerEXT);
//BINDNAME(glBlendFuncSeparateEXT);
//BINDNAME(glActiveStencilFaceEXT);
//BINDNAME(glDepthBoundsEXT);
//BINDNAME(glBlendEquationSeparateEXT);
//BINDNAME(glIsRenderbufferEXT);
//BINDNAME(glBindRenderbufferEXT);
//BINDNAME(glDeleteRenderbuffersEXT);
//BINDNAME(glGenRenderbuffersEXT);
//BINDNAME(glRenderbufferStorageEXT);
//BINDNAME(glGetRenderbufferParameterivEXT);
//BINDNAME(glIsFramebufferEXT);
//BINDNAME(glBindFramebufferEXT);
//BINDNAME(glDeleteFramebuffersEXT);
//BINDNAME(glGenFramebuffersEXT);
//BINDNAME(glCheckFramebufferStatusEXT);
//BINDNAME(glFramebufferTexture1DEXT);
//BINDNAME(glFramebufferTexture2DEXT);
//BINDNAME(glFramebufferTexture3DEXT);
//BINDNAME(glFramebufferRenderbufferEXT);
//BINDNAME(glGetFramebufferAttachmentParameterivEXT);
//BINDNAME(glGenerateMipmapEXT);
//BINDNAME(glBlitFramebufferEXT);
//BINDNAME(glRenderbufferStorageMultisampleEXT);
//BINDNAME(glProgramParameteriEXT);
//BINDNAME(glFramebufferTextureEXT);
//BINDNAME(glFramebufferTextureFaceEXT);
//BINDNAME(glFramebufferTextureLayerEXT);
//BINDNAME(glIsRenderbuffer);
//BINDNAME(glBindRenderbuffer);
//BINDNAME(glDeleteRenderbuffers);
//BINDNAME(glGenRenderbuffers);
//BINDNAME(glRenderbufferStorage);
//BINDNAME(glGetRenderbufferParameteriv);
//BINDNAME(glIsFramebuffer);
//BINDNAME(glBindFramebuffer);
//BINDNAME(glDeleteFramebuffers);
//BINDNAME(glGenFramebuffers);
//BINDNAME(glCheckFramebufferStatus);
//BINDNAME(glFramebufferTexture1D);
//BINDNAME(glFramebufferTexture2D);
//BINDNAME(glFramebufferTexture3D);
//BINDNAME(glFramebufferRenderbuffer);
//BINDNAME(glGetFramebufferAttachmentParameteriv);
//BINDNAME(glGenerateMipmap);
//BINDNAME(glBlitFramebuffer);
//BINDNAME(glRenderbufferStorageMultisample);
//BINDNAME(glFramebufferTextureLayer);
//BINDNAME(glBindBufferRangeEXT);
//BINDNAME(glBindBufferOffsetEXT);
//BINDNAME(glBindBufferBaseEXT);
//BINDNAME(glBeginTransformFeedbackEXT);
//BINDNAME(glEndTransformFeedbackEXT);
//BINDNAME(glTransformFeedbackVaryingsEXT);
//BINDNAME(glGetTransformFeedbackVaryingEXT);
//BINDNAME(glGetIntegerIndexedvEXT);
//BINDNAME(glGetBooleanIndexedvEXT);
//BINDNAME(glUniformBufferEXT);
//BINDNAME(glGetUniformBufferSizeEXT);
//BINDNAME(glGetUniformOffsetEXT);
//BINDNAME(glClearColorIiEXT);
//BINDNAME(glClearColorIuiEXT);
//BINDNAME(glTexParameterIivEXT);
//BINDNAME(glTexParameterIuivEXT);
//BINDNAME(glGetTexParameterIivEXT);
//BINDNAME(glGetTexParameterIuivEXT);
//BINDNAME(glVertexAttribI1iEXT);
//BINDNAME(glVertexAttribI2iEXT);
//BINDNAME(glVertexAttribI3iEXT);
//BINDNAME(glVertexAttribI4iEXT);
//BINDNAME(glVertexAttribI1uiEXT);
//BINDNAME(glVertexAttribI2uiEXT);
//BINDNAME(glVertexAttribI3uiEXT);
//BINDNAME(glVertexAttribI4uiEXT);
//BINDNAME(glVertexAttribI1ivEXT);
//BINDNAME(glVertexAttribI2ivEXT);
//BINDNAME(glVertexAttribI3ivEXT);
//BINDNAME(glVertexAttribI4ivEXT);
//BINDNAME(glVertexAttribI1uivEXT);
//BINDNAME(glVertexAttribI2uivEXT);
//BINDNAME(glVertexAttribI3uivEXT);
//BINDNAME(glVertexAttribI4uivEXT);
//BINDNAME(glVertexAttribI4bvEXT);
//BINDNAME(glVertexAttribI4svEXT);
//BINDNAME(glVertexAttribI4ubvEXT);
//BINDNAME(glVertexAttribI4usvEXT);
//BINDNAME(glVertexAttribIPointerEXT);
//BINDNAME(glGetVertexAttribIivEXT);
//BINDNAME(glGetVertexAttribIuivEXT);
//BINDNAME(glUniform1uiEXT);
//BINDNAME(glUniform2uiEXT);
//BINDNAME(glUniform3uiEXT);
//BINDNAME(glUniform4uiEXT);
//BINDNAME(glUniform1uivEXT);
//BINDNAME(glUniform2uivEXT);
//BINDNAME(glUniform3uivEXT);
//BINDNAME(glUniform4uivEXT);
//BINDNAME(glGetUniformuivEXT);
//BINDNAME(glBindFragDataLocationEXT);
//BINDNAME(glGetFragDataLocationEXT);
//BINDNAME(glColorMaskIndexedEXT);
//BINDNAME(glEnableIndexedEXT);
//BINDNAME(glDisableIndexedEXT);
//BINDNAME(glIsEnabledIndexedEXT);
//BINDNAME(glProvokingVertexEXT);
//BINDNAME(glTextureRangeAPPLE);
//BINDNAME(glGetTexParameterPointervAPPLE);
//BINDNAME(glVertexArrayRangeAPPLE);
//BINDNAME(glFlushVertexArrayRangeAPPLE);
//BINDNAME(glVertexArrayParameteriAPPLE);
//BINDNAME(glBindVertexArrayAPPLE);
//BINDNAME(glDeleteVertexArraysAPPLE);
//BINDNAME(glGenVertexArraysAPPLE);
//BINDNAME(glIsVertexArrayAPPLE);
//BINDNAME(glGenFencesAPPLE);
//BINDNAME(glDeleteFencesAPPLE);
//BINDNAME(glSetFenceAPPLE);
//BINDNAME(glIsFenceAPPLE);
//BINDNAME(glTestFenceAPPLE);
//BINDNAME(glFinishFenceAPPLE);
//BINDNAME(glTestObjectAPPLE);
//BINDNAME(glFinishObjectAPPLE);
//BINDNAME(glElementPointerAPPLE);
//BINDNAME(glDrawElementArrayAPPLE);
//BINDNAME(glDrawRangeElementArrayAPPLE);
//BINDNAME(glMultiDrawElementArrayAPPLE);
//BINDNAME(glMultiDrawRangeElementArrayAPPLE);
//BINDNAME(glFlushRenderAPPLE);
//BINDNAME(glFinishRenderAPPLE);
//BINDNAME(glSwapAPPLE);
//BINDNAME(glEnableVertexAttribAPPLE);
//BINDNAME(glDisableVertexAttribAPPLE);
//BINDNAME(glIsVertexAttribEnabledAPPLE);
//BINDNAME(glMapVertexAttrib1dAPPLE);
//BINDNAME(glMapVertexAttrib1fAPPLE);
//BINDNAME(glMapVertexAttrib2dAPPLE);
//BINDNAME(glMapVertexAttrib2fAPPLE);
//BINDNAME(glBufferParameteriAPPLE);
//BINDNAME(glFlushMappedBufferRangeAPPLE);
//BINDNAME(glObjectPurgeableAPPLE);
//BINDNAME(glObjectUnpurgeableAPPLE);
//BINDNAME(glGetObjectParameterivAPPLE);
//BINDNAME(glPNTrianglesiATI);
//BINDNAME(glPNTrianglesfATI);
//BINDNAME(glBlendEquationSeparateATI);
//BINDNAME(glStencilOpSeparateATI);
//BINDNAME(glStencilFuncSeparateATI);
//BINDNAME(glPNTrianglesiATIX);
//BINDNAME(glPNTrianglesfATIX);
//BINDNAME(glPointParameteriNV);
//BINDNAME(glPointParameterivNV);
//BINDNAME(glBeginConditionalRenderNV);
//BINDNAME(glEndConditionalRenderNV);
//BINDNAME(glAccum);
//BINDNAME(glAlphaFunc);
//BINDNAME(glAreTexturesResident);
//BINDNAME(glArrayElement);
BINDNAME(glBegin);
BINDNAME(glBindTexture);
//BINDNAME(glBitmap);
//BINDNAME(glBlendColor);
//BINDNAME(glBlendEquation);
//BINDNAME(glBlendEquationSeparate);
BINDNAME(glBlendFunc);
//BINDNAME(glCallList);
//BINDNAME(glCallLists);
BINDNAME(glClear);
//BINDNAME(glClearAccum);
BINDNAME(glClearColor);
BINDNAME(glClearDepth);
//BINDNAME(glClearIndex);
//BINDNAME(glClearStencil);
BINDNAME(glClipPlane);
//BINDNAME(glColor3b);
//BINDNAME(glColor3bv);
//BINDNAME(glColor3d);
//BINDNAME(glColor3dv);
BINDNAME(glColor3f);
BINDNAME(glColor3fv);
//BINDNAME(glColor3i);
//BINDNAME(glColor3iv);
//BINDNAME(glColor3s);
//BINDNAME(glColor3sv);
BINDNAME(glColor3ub);
//BINDNAME(glColor3ubv);
//BINDNAME(glColor3ui);
//BINDNAME(glColor3uiv);
//BINDNAME(glColor3us);
//BINDNAME(glColor3usv);
//BINDNAME(glColor4b);
//BINDNAME(glColor4bv);
//BINDNAME(glColor4d);
//BINDNAME(glColor4dv);
BINDNAME(glColor4f);
//BINDNAME(glColor4fv);
//BINDNAME(glColor4i);
//BINDNAME(glColor4iv);
//BINDNAME(glColor4s);
//BINDNAME(glColor4sv);
BINDNAME(glColor4ub);
//BINDNAME(glColor4ubv);
//BINDNAME(glColor4ui);
//BINDNAME(glColor4uiv);
//BINDNAME(glColor4us);
//BINDNAME(glColor4usv);
BINDNAME(glColorMask);
BINDNAME(glColorMaterial);
BINDNAME(glColorPointer);
//BINDNAME(glColorSubTable);
//BINDNAME(glColorTable);
//BINDNAME(glColorTableParameterfv);
//BINDNAME(glColorTableParameteriv);
//BINDNAME(glConvolutionFilter1D);
//BINDNAME(glConvolutionFilter2D);
//BINDNAME(glConvolutionParameterf);
//BINDNAME(glConvolutionParameterfv);
//BINDNAME(glConvolutionParameteri);
//BINDNAME(glConvolutionParameteriv);
//BINDNAME(glCopyColorSubTable);
//BINDNAME(glCopyColorTable);
//BINDNAME(glCopyConvolutionFilter1D);
//BINDNAME(glCopyConvolutionFilter2D);
//BINDNAME(glCopyPixels);
//BINDNAME(glCopyTexImage1D);
//BINDNAME(glCopyTexImage2D);
//BINDNAME(glCopyTexSubImage1D);
//BINDNAME(glCopyTexSubImage2D);
//BINDNAME(glCopyTexSubImage3D);
BINDNAME(glCullFace);
//BINDNAME(glDeleteLists);
BINDNAME(glDeleteTextures);
BINDNAME(glDepthFunc);
BINDNAME(glDepthMask);
BINDNAME(glDepthRange);
BINDNAME(glDisable);
BINDNAME(glDisableClientState);
BINDNAME(glDrawArrays);
//BINDNAME(glDrawBuffer);
BINDNAME(glDrawElements);
//BINDNAME(glDrawPixels);
BINDNAME(glDrawRangeElements);
//BINDNAME(glEdgeFlag);
//BINDNAME(glEdgeFlagPointer);
//BINDNAME(glEdgeFlagv);
BINDNAME(glEnable);
BINDNAME(glEnableClientState);
BINDNAME(glEnd);
//BINDNAME(glEndList);
//BINDNAME(glEvalCoord1d);
//BINDNAME(glEvalCoord1dv);
//BINDNAME(glEvalCoord1f);
//BINDNAME(glEvalCoord1fv);
//BINDNAME(glEvalCoord2d);
//BINDNAME(glEvalCoord2dv);
//BINDNAME(glEvalCoord2f);
//BINDNAME(glEvalCoord2fv);
//BINDNAME(glEvalMesh1);
//BINDNAME(glEvalMesh2);
//BINDNAME(glEvalPoint1);
//BINDNAME(glEvalPoint2);
//BINDNAME(glFeedbackBuffer);
//BINDNAME(glFinish);
BINDNAME(glFlush);
BINDNAME(glFogf);
BINDNAME(glFogfv);
BINDNAME(glFogi);
//BINDNAME(glFogiv);
BINDNAME(glFrontFace);
BINDNAME(glFrustum);
//BINDNAME(glGenLists);
BINDNAME(glGenTextures);
//BINDNAME(glGetBooleanv);
//BINDNAME(glGetClipPlane);
//BINDNAME(glGetColorTable);
//BINDNAME(glGetColorTableParameterfv);
//BINDNAME(glGetColorTableParameteriv);
//BINDNAME(glGetConvolutionFilter);
//BINDNAME(glGetConvolutionParameterfv);
//BINDNAME(glGetConvolutionParameteriv);
//BINDNAME(glGetDoublev);
BINDNAME(glGetError);
BINDNAME(glGetFloatv);
//BINDNAME(glGetHistogram);
//BINDNAME(glGetHistogramParameterfv);
//BINDNAME(glGetHistogramParameteriv);
BINDNAME(glGetIntegerv);
//BINDNAME(glGetLightfv);
//BINDNAME(glGetLightiv);
//BINDNAME(glGetMapdv);
//BINDNAME(glGetMapfv);
//BINDNAME(glGetMapiv);
BINDNAME(glGetMaterialfv);
//BINDNAME(glGetMaterialiv);
//BINDNAME(glGetMinmax);
//BINDNAME(glGetMinmaxParameterfv);
//BINDNAME(glGetMinmaxParameteriv);
//BINDNAME(glGetPixelMapfv);
//BINDNAME(glGetPixelMapuiv);
//BINDNAME(glGetPixelMapusv);
//BINDNAME(glGetPointerv);
//BINDNAME(glGetPolygonStipple);
//BINDNAME(glGetSeparableFilter);
BINDNAME(glGetString);
//BINDNAME(glGetTexEnvfv);
//BINDNAME(glGetTexEnviv);
//BINDNAME(glGetTexGendv);
//BINDNAME(glGetTexGenfv);
//BINDNAME(glGetTexGeniv);
BINDNAME(glGetTexImage);
//BINDNAME(glGetTexLevelParameterfv);
BINDNAME(glGetTexLevelParameteriv);
//BINDNAME(glGetTexParameterfv);
//BINDNAME(glGetTexParameteriv);
BINDNAME(glHint);
//BINDNAME(glHistogram);
//BINDNAME(glIndexMask);
//BINDNAME(glIndexPointer);
//BINDNAME(glIndexd);
//BINDNAME(glIndexdv);
//BINDNAME(glIndexf);
//BINDNAME(glIndexfv);
//BINDNAME(glIndexi);
//BINDNAME(glIndexiv);
//BINDNAME(glIndexs);
//BINDNAME(glIndexsv);
//BINDNAME(glIndexub);
//BINDNAME(glIndexubv);
//BINDNAME(glInitNames);
//BINDNAME(glInterleavedArrays);
BINDNAME(glIsEnabled);
//BINDNAME(glIsList);
BINDNAME(glIsTexture);
//BINDNAME(glLightModelf);
BINDNAME(glLightModelfv);
BINDNAME(glLightModeli);
//BINDNAME(glLightModeliv);
BINDNAME(glLightf);
BINDNAME(glLightfv);
//BINDNAME(glLighti);
//BINDNAME(glLightiv);
//BINDNAME(glLineStipple);
BINDNAME(glLineWidth);
//BINDNAME(glListBase);
BINDNAME(glLoadIdentity);
BINDNAME(glLoadMatrixd);
BINDNAME(glLoadMatrixf);
//BINDNAME(glLoadName);
//BINDNAME(glLogicOp);
//BINDNAME(glMap1d);
//BINDNAME(glMap1f);
//BINDNAME(glMap2d);
//BINDNAME(glMap2f);
//BINDNAME(glMapGrid1d);
//BINDNAME(glMapGrid1f);
//BINDNAME(glMapGrid2d);
//BINDNAME(glMapGrid2f);
BINDNAME(glMaterialf);
BINDNAME(glMaterialfv);
//BINDNAME(glMateriali);
//BINDNAME(glMaterialiv);
BINDNAME(glMatrixMode);
//BINDNAME(glMinmax);
//BINDNAME(glMultMatrixd);
BINDNAME(glMultMatrixf);
//BINDNAME(glNewList);
//BINDNAME(glNormal3b);
//BINDNAME(glNormal3bv);
//BINDNAME(glNormal3d);
//BINDNAME(glNormal3dv);
BINDNAME(glNormal3f);
BINDNAME(glNormal3fv);
//BINDNAME(glNormal3i);
//BINDNAME(glNormal3iv);
//BINDNAME(glNormal3s);
//BINDNAME(glNormal3sv);
BINDNAME(glNormalPointer);
BINDNAME(glOrtho);
//BINDNAME(glPassThrough);
//BINDNAME(glPixelMapfv);
//BINDNAME(glPixelMapuiv);
//BINDNAME(glPixelMapusv);
BINDNAME(glPixelStoref);
BINDNAME(glPixelStorei);
BINDNAME(glPixelTransferf);
BINDNAME(glPixelTransferi);
//BINDNAME(glPixelZoom);
BINDNAME(glPointSize);
BINDNAME(glPolygonMode);
BINDNAME(glPolygonOffset);
//BINDNAME(glPolygonStipple);
BINDNAME(glPopAttrib);
BINDNAME(glPopClientAttrib);
BINDNAME(glPopMatrix);
//BINDNAME(glPopName);
//BINDNAME(glPrioritizeTextures);
BINDNAME(glPushAttrib);
BINDNAME(glPushClientAttrib);
BINDNAME(glPushMatrix);
//BINDNAME(glPushName);
//BINDNAME(glRasterPos2d);
//BINDNAME(glRasterPos2dv);
//BINDNAME(glRasterPos2f);
//BINDNAME(glRasterPos2fv);
//BINDNAME(glRasterPos2i);
//BINDNAME(glRasterPos2iv);
//BINDNAME(glRasterPos2s);
//BINDNAME(glRasterPos2sv);
//BINDNAME(glRasterPos3d);
//BINDNAME(glRasterPos3dv);
//BINDNAME(glRasterPos3f);
//BINDNAME(glRasterPos3fv);
//BINDNAME(glRasterPos3i);
//BINDNAME(glRasterPos3iv);
//BINDNAME(glRasterPos3s);
//BINDNAME(glRasterPos3sv);
//BINDNAME(glRasterPos4d);
//BINDNAME(glRasterPos4dv);
//BINDNAME(glRasterPos4f);
//BINDNAME(glRasterPos4fv);
//BINDNAME(glRasterPos4i);
//BINDNAME(glRasterPos4iv);
//BINDNAME(glRasterPos4s);
//BINDNAME(glRasterPos4sv);
BINDNAME(glReadBuffer);
BINDNAME(glReadPixels);
//BINDNAME(glRectd);
//BINDNAME(glRectdv);
//BINDNAME(glRectf);
//BINDNAME(glRectfv);
//BINDNAME(glRecti);
//BINDNAME(glRectiv);
//BINDNAME(glRects);
//BINDNAME(glRectsv);
//BINDNAME(glRenderMode);
//BINDNAME(glResetHistogram);
//BINDNAME(glResetMinmax);
//BINDNAME(glRotated);
BINDNAME(glRotatef);
//BINDNAME(glScaled);
BINDNAME(glScalef);
BINDNAME(glScissor);
//BINDNAME(glSelectBuffer);
//BINDNAME(glSeparableFilter2D);
BINDNAME(glShadeModel);
//BINDNAME(glStencilFunc);
//BINDNAME(glStencilMask);
//BINDNAME(glStencilOp);
//BINDNAME(glTexCoord1d);
//BINDNAME(glTexCoord1dv);
//BINDNAME(glTexCoord1f);
//BINDNAME(glTexCoord1fv);
//BINDNAME(glTexCoord1i);
//BINDNAME(glTexCoord1iv);
//BINDNAME(glTexCoord1s);
//BINDNAME(glTexCoord1sv);
//BINDNAME(glTexCoord2d);
//BINDNAME(glTexCoord2dv);
BINDNAME(glTexCoord2f);
//BINDNAME(glTexCoord2fv);
//BINDNAME(glTexCoord2i);
//BINDNAME(glTexCoord2iv);
//BINDNAME(glTexCoord2s);
//BINDNAME(glTexCoord2sv);
//BINDNAME(glTexCoord3d);
//BINDNAME(glTexCoord3dv);
//BINDNAME(glTexCoord3f);
//BINDNAME(glTexCoord3fv);
//BINDNAME(glTexCoord3i);
//BINDNAME(glTexCoord3iv);
//BINDNAME(glTexCoord3s);
//BINDNAME(glTexCoord3sv);
//BINDNAME(glTexCoord4d);
//BINDNAME(glTexCoord4dv);
//BINDNAME(glTexCoord4f);
//BINDNAME(glTexCoord4fv);
//BINDNAME(glTexCoord4i);
//BINDNAME(glTexCoord4iv);
//BINDNAME(glTexCoord4s);
//BINDNAME(glTexCoord4sv);
BINDNAME(glTexCoordPointer);
BINDNAME(glTexEnvf);
BINDNAME(glTexEnvfv);
BINDNAME(glTexEnvi);
BINDNAME(glTexEnviv);
//BINDNAME(glTexGend);
//BINDNAME(glTexGendv);
//BINDNAME(glTexGenf);
//BINDNAME(glTexGenfv);
BINDNAME(glTexGeni);
//BINDNAME(glTexGeniv);
BINDNAME(glTexImage1D);
BINDNAME(glTexImage2D);
//BINDNAME(glTexImage3D);
BINDNAME(glTexParameterf);
BINDNAME(glTexParameterfv);
BINDNAME(glTexParameteri);
//BINDNAME(glTexParameteriv);
//BINDNAME(glTexSubImage1D);
BINDNAME(glTexSubImage2D);
//BINDNAME(glTexSubImage3D);
BINDNAME(glTranslated);
BINDNAME(glTranslatef);
//BINDNAME(glVertex2d);
//BINDNAME(glVertex2dv);
BINDNAME(glVertex2f);
//BINDNAME(glVertex2fv);
BINDNAME(glVertex2i);
//BINDNAME(glVertex2iv);
//BINDNAME(glVertex2s);
//BINDNAME(glVertex2sv);
//BINDNAME(glVertex3d);
//BINDNAME(glVertex3dv);
BINDNAME(glVertex3f);
BINDNAME(glVertex3fv);
//BINDNAME(glVertex3i);
//BINDNAME(glVertex3iv);
//BINDNAME(glVertex3s);
//BINDNAME(glVertex3sv);
//BINDNAME(glVertex4d);
//BINDNAME(glVertex4dv);
BINDNAME(glVertex4f);
//BINDNAME(glVertex4fv);
//BINDNAME(glVertex4i);
//BINDNAME(glVertex4iv);
//BINDNAME(glVertex4s);
//BINDNAME(glVertex4sv);
BINDNAME(glVertexPointer);
BINDNAME(glViewport);
//BINDNAME(glSampleCoverage);
//BINDNAME(glSamplePass);
//BINDNAME(glLoadTransposeMatrixf);
//BINDNAME(glLoadTransposeMatrixd);
//BINDNAME(glMultTransposeMatrixf);
//BINDNAME(glMultTransposeMatrixd);
//BINDNAME(glCompressedTexImage3D);
//BINDNAME(glCompressedTexImage2D);
//BINDNAME(glCompressedTexImage1D);
//BINDNAME(glCompressedTexSubImage3D);
//BINDNAME(glCompressedTexSubImage2D);
//BINDNAME(glCompressedTexSubImage1D);
//BINDNAME(glGetCompressedTexImage);
//BINDNAME(glActiveTexture);
//BINDNAME(glClientActiveTexture);
//BINDNAME(glMultiTexCoord1d);
//BINDNAME(glMultiTexCoord1dv);
//BINDNAME(glMultiTexCoord1f);
//BINDNAME(glMultiTexCoord1fv);
//BINDNAME(glMultiTexCoord1i);
//BINDNAME(glMultiTexCoord1iv);
//BINDNAME(glMultiTexCoord1s);
//BINDNAME(glMultiTexCoord1sv);
//BINDNAME(glMultiTexCoord2d);
//BINDNAME(glMultiTexCoord2dv);
//BINDNAME(glMultiTexCoord2f);
//BINDNAME(glMultiTexCoord2fv);
//BINDNAME(glMultiTexCoord2i);
//BINDNAME(glMultiTexCoord2iv);
//BINDNAME(glMultiTexCoord2s);
//BINDNAME(glMultiTexCoord2sv);
//BINDNAME(glMultiTexCoord3d);
//BINDNAME(glMultiTexCoord3dv);
//BINDNAME(glMultiTexCoord3f);
//BINDNAME(glMultiTexCoord3fv);
//BINDNAME(glMultiTexCoord3i);
//BINDNAME(glMultiTexCoord3iv);
//BINDNAME(glMultiTexCoord3s);
//BINDNAME(glMultiTexCoord3sv);
//BINDNAME(glMultiTexCoord4d);
//BINDNAME(glMultiTexCoord4dv);
//BINDNAME(glMultiTexCoord4f);
//BINDNAME(glMultiTexCoord4fv);
//BINDNAME(glMultiTexCoord4i);
//BINDNAME(glMultiTexCoord4iv);
//BINDNAME(glMultiTexCoord4s);
//BINDNAME(glMultiTexCoord4sv);
//BINDNAME(glFogCoordf);
//BINDNAME(glFogCoordfv);
//BINDNAME(glFogCoordd);
//BINDNAME(glFogCoorddv);
//BINDNAME(glFogCoordPointer);
//BINDNAME(glSecondaryColor3b);
//BINDNAME(glSecondaryColor3bv);
//BINDNAME(glSecondaryColor3d);
//BINDNAME(glSecondaryColor3dv);
//BINDNAME(glSecondaryColor3f);
//BINDNAME(glSecondaryColor3fv);
//BINDNAME(glSecondaryColor3i);
//BINDNAME(glSecondaryColor3iv);
//BINDNAME(glSecondaryColor3s);
//BINDNAME(glSecondaryColor3sv);
//BINDNAME(glSecondaryColor3ub);
//BINDNAME(glSecondaryColor3ubv);
//BINDNAME(glSecondaryColor3ui);
//BINDNAME(glSecondaryColor3uiv);
//BINDNAME(glSecondaryColor3us);
//BINDNAME(glSecondaryColor3usv);
//BINDNAME(glSecondaryColorPointer);
//BINDNAME(glPointParameterf);
//BINDNAME(glPointParameterfv);
//BINDNAME(glPointParameteri);
//BINDNAME(glPointParameteriv);
//BINDNAME(glBlendFuncSeparate);
//BINDNAME(glMultiDrawArrays);
//BINDNAME(glMultiDrawElements);
//BINDNAME(glWindowPos2d);
//BINDNAME(glWindowPos2dv);
//BINDNAME(glWindowPos2f);
//BINDNAME(glWindowPos2fv);
//BINDNAME(glWindowPos2i);
//BINDNAME(glWindowPos2iv);
//BINDNAME(glWindowPos2s);
//BINDNAME(glWindowPos2sv);
//BINDNAME(glWindowPos3d);
//BINDNAME(glWindowPos3dv);
//BINDNAME(glWindowPos3f);
//BINDNAME(glWindowPos3fv);
//BINDNAME(glWindowPos3i);
//BINDNAME(glWindowPos3iv);
//BINDNAME(glWindowPos3s);
//BINDNAME(glWindowPos3sv);
//BINDNAME(glGenQueries);
//BINDNAME(glDeleteQueries);
//BINDNAME(glIsQuery);
//BINDNAME(glBeginQuery);
//BINDNAME(glEndQuery);
//BINDNAME(glGetQueryiv);
//BINDNAME(glGetQueryObjectiv);
//BINDNAME(glGetQueryObjectuiv);
//BINDNAME(glBindBuffer);
//BINDNAME(glDeleteBuffers);
//BINDNAME(glGenBuffers);
//BINDNAME(glIsBuffer);
//BINDNAME(glBufferData);
//BINDNAME(glBufferSubData);
//BINDNAME(glGetBufferSubData);
//BINDNAME(glMapBuffer);
//BINDNAME(glUnmapBuffer);
//BINDNAME(glGetBufferParameteriv);
//BINDNAME(glGetBufferPointerv);
//BINDNAME(glDrawBuffers);
//BINDNAME(glVertexAttrib1d);
//BINDNAME(glVertexAttrib1dv);
//BINDNAME(glVertexAttrib1f);
//BINDNAME(glVertexAttrib1fv);
//BINDNAME(glVertexAttrib1s);
//BINDNAME(glVertexAttrib1sv);
//BINDNAME(glVertexAttrib2d);
//BINDNAME(glVertexAttrib2dv);
//BINDNAME(glVertexAttrib2f);
//BINDNAME(glVertexAttrib2fv);
//BINDNAME(glVertexAttrib2s);
//BINDNAME(glVertexAttrib2sv);
//BINDNAME(glVertexAttrib3d);
//BINDNAME(glVertexAttrib3dv);
//BINDNAME(glVertexAttrib3f);
//BINDNAME(glVertexAttrib3fv);
//BINDNAME(glVertexAttrib3s);
//BINDNAME(glVertexAttrib3sv);
//BINDNAME(glVertexAttrib4Nbv);
//BINDNAME(glVertexAttrib4Niv);
//BINDNAME(glVertexAttrib4Nsv);
//BINDNAME(glVertexAttrib4Nub);
//BINDNAME(glVertexAttrib4Nubv);
//BINDNAME(glVertexAttrib4Nuiv);
//BINDNAME(glVertexAttrib4Nusv);
//BINDNAME(glVertexAttrib4bv);
//BINDNAME(glVertexAttrib4d);
//BINDNAME(glVertexAttrib4dv);
//BINDNAME(glVertexAttrib4f);
//BINDNAME(glVertexAttrib4fv);
//BINDNAME(glVertexAttrib4iv);
//BINDNAME(glVertexAttrib4s);
//BINDNAME(glVertexAttrib4sv);
//BINDNAME(glVertexAttrib4ubv);
//BINDNAME(glVertexAttrib4uiv);
//BINDNAME(glVertexAttrib4usv);
//BINDNAME(glVertexAttribPointer);
//BINDNAME(glEnableVertexAttribArray);
//BINDNAME(glDisableVertexAttribArray);
//BINDNAME(glGetVertexAttribdv);
//BINDNAME(glGetVertexAttribfv);
//BINDNAME(glGetVertexAttribiv);
//BINDNAME(glGetVertexAttribPointerv);
//BINDNAME(glDeleteShader);
//BINDNAME(glDetachShader);
//BINDNAME(glCreateShader);
//BINDNAME(glShaderSource);
//BINDNAME(glCompileShader);
//BINDNAME(glCreateProgram);
//BINDNAME(glAttachShader);
//BINDNAME(glLinkProgram);
//BINDNAME(glUseProgram);
//BINDNAME(glDeleteProgram);
//BINDNAME(glValidateProgram);
//BINDNAME(glUniform1f);
//BINDNAME(glUniform2f);
//BINDNAME(glUniform3f);
//BINDNAME(glUniform4f);
//BINDNAME(glUniform1i);
//BINDNAME(glUniform2i);
//BINDNAME(glUniform3i);
//BINDNAME(glUniform4i);
//BINDNAME(glUniform1fv);
//BINDNAME(glUniform2fv);
//BINDNAME(glUniform3fv);
//BINDNAME(glUniform4fv);
//BINDNAME(glUniform1iv);
//BINDNAME(glUniform2iv);
//BINDNAME(glUniform3iv);
//BINDNAME(glUniform4iv);
//BINDNAME(glUniformMatrix2fv);
//BINDNAME(glUniformMatrix3fv);
//BINDNAME(glUniformMatrix4fv);
//BINDNAME(glIsShader);
//BINDNAME(glIsProgram);
//BINDNAME(glGetShaderiv);
//BINDNAME(glGetProgramiv);
//BINDNAME(glGetAttachedShaders);
//BINDNAME(glGetShaderInfoLog);
//BINDNAME(glGetProgramInfoLog);
//BINDNAME(glGetUniformLocation);
//BINDNAME(glGetActiveUniform);
//BINDNAME(glGetUniformfv);
//BINDNAME(glGetUniformiv);
//BINDNAME(glGetShaderSource);
//BINDNAME(glBindAttribLocation);
//BINDNAME(glGetActiveAttrib);
//BINDNAME(glGetAttribLocation);
//BINDNAME(glStencilFuncSeparate);
//BINDNAME(glStencilOpSeparate);
//BINDNAME(glStencilMaskSeparate);
//BINDNAME(glUniformMatrix2x3fv);
//BINDNAME(glUniformMatrix3x2fv);
//BINDNAME(glUniformMatrix2x4fv);
//BINDNAME(glUniformMatrix4x2fv);
//BINDNAME(glUniformMatrix3x4fv);
//BINDNAME(glUniformMatrix4x3fv);

	END_PACKAGE()

}
